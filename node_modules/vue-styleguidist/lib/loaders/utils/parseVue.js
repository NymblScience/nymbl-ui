"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseVue;

var _hashSum = _interopRequireDefault(require("hash-sum"));

var compiler = _interopRequireWildcard(require("vue-template-compiler"));

var _lruCache = _interopRequireDefault(require("lru-cache"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const cache = new _lruCache.default(100);

function parseVue(source, filename) {
  const cacheKey = (0, _hashSum.default)(filename + source); // source-map cache busting for hot-reloadded modules

  let output = cache.get(cacheKey);

  if (output) {
    return output;
  }

  output = compiler.parseComponent(source);
  cache.set(cacheKey, output);
  return output;
}