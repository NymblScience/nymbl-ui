{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NCalendar.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport NCalendarControls from \"./NCalendarControls.vue\";\nimport NCalendarMonth from \"./NCalendarMonth.vue\";\n\nimport dateUtils from \"../helpers/date\";\nimport { scrollIntoView } from \"../helpers/element-scroll\";\n\nexport default {\n  name: \"NCalendar\",\n\n  components: {\n    NCalendarControls,\n    NCalendarMonth\n  },\n\n  props: {\n    value: Date,\n    minDate: Date,\n    maxDate: Date,\n    isStatic: {\n      type: Boolean,\n      default: false\n    },\n    hasYear: {\n      type: Boolean,\n      default: true\n    },\n    controls: {\n      type: Boolean,\n      default: true\n    },\n    startOfWeek: {\n      type: Number,\n      default: 0\n    },\n    lang: {\n      type: Object,\n      default() {\n        return dateUtils.defaultLang;\n      }\n    },\n    yearRange: {\n      type: Array,\n      default() {\n        const thisYear = new Date().getFullYear();\n\n        // Generates a range of 200 years\n        // (100 years into the past and 100 years into the future, including the current year)\n        return Array.apply(null, Array(200)).map((item, index) => {\n          return thisYear - 100 + index;\n        });\n      }\n    },\n    dateFilter: Function,\n    color: {\n      type: String,\n      default: \"primary\" // 'primary' or 'accent'\n    },\n    orientation: {\n      type: String,\n      default: \"portrait\" // 'portrait' or 'landscape'\n    }\n  },\n\n  data() {\n    return {\n      today: new Date(),\n      dateInView: this.getDateInRange(this.value, new Date()),\n      showYearPicker: false\n    };\n  },\n\n  computed: {\n    classes() {\n      return [\n        `n-calendar--color-${this.color}`,\n        `n-calendar--orientation-${this.orientation}`\n      ];\n    },\n\n    headerYear() {\n      return this.dateInView\n        ? this.dateInView.getFullYear()\n        : this.today.getFullYear();\n    },\n\n    headerDay() {\n      return this.value\n        ? dateUtils.getDayAbbreviated(this.value, this.lang)\n        : dateUtils.getDayAbbreviated(this.today, this.lang);\n    },\n\n    headerDate() {\n      const date = this.value ? this.value : this.today;\n\n      return (\n        dateUtils.getMonthAbbreviated(date, this.lang) +\n        \" \" +\n        dateUtils.getDayOfMonth(date, this.lang)\n      );\n    }\n  },\n\n  watch: {\n    value() {\n      if (this.value) {\n        this.dateInView = dateUtils.clone(this.value);\n      }\n    },\n\n    showYearPicker() {\n      if (this.showYearPicker) {\n        this.$nextTick(() => {\n          const el =\n            this.$refs.years.querySelector(\".is-selected\") ||\n            this.$refs.years.querySelector(\".is-current-year\");\n\n          scrollIntoView(el, { marginTop: 126 });\n        });\n      }\n    }\n  },\n\n  methods: {\n    selectYear(year) {\n      const newDate = dateUtils.clone(this.dateInView);\n      newDate.setFullYear(year);\n\n      this.dateInView = this.getDateInRange(newDate);\n      this.showYearPicker = false;\n    },\n\n    getDateInRange(date, fallback) {\n      date = date || fallback;\n\n      if (this.minDate && date.getTime() < this.minDate.getTime()) {\n        return this.minDate;\n      }\n\n      if (this.maxDate && date.getTime() > this.maxDate.getTime()) {\n        return this.maxDate;\n      }\n\n      return date;\n    },\n\n    getYearClasses(year) {\n      return {\n        \"is-current-year\": this.isYearCurrent(year),\n        \"is-selected\": this.isYearSelected(year)\n      };\n    },\n\n    isYearCurrent(year) {\n      return year === this.today.getFullYear();\n    },\n\n    isYearSelected(year) {\n      return this.dateInView && year === this.dateInView.getFullYear();\n    },\n\n    isYearOutOfRange(year) {\n      if (this.minDate && year < this.minDate.getFullYear()) {\n        return true;\n      }\n\n      if (this.maxDate && year > this.maxDate.getFullYear()) {\n        return true;\n      }\n\n      return false;\n    },\n\n    onDateSelect(date) {\n      this.$emit(\"input\", date);\n      this.$emit(\"date-select\", date);\n    },\n\n    onGoToDate(date, options = { isForward: true }) {\n      this.$refs.month.goToDate(date, options);\n    },\n\n    onMonthChange(newDate) {\n      this.dateInView = newDate;\n      this.$emit(\"month-change\", newDate);\n    }\n  }\n};\n",{"version":3,"sources":["NCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"NCalendar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"n-calendar\" :class=\"classes\">\n    <div v-if=\"!isStatic && hasYear\" class=\"n-calendar__header\">\n      <div\n        class=\"n-calendar__header-year\"\n        tabindex=\"0\"\n        :class=\"{ 'is-active': showYearPicker }\"\n        @click=\"showYearPicker = true\"\n        @keydown.enter=\"showYearPicker = true\"\n      >\n        {{ headerYear }}\n      </div>\n    </div>\n\n    <div class=\"n-calendar__body\">\n      <ul v-show=\"showYearPicker\" ref=\"years\" class=\"n-calendar__years\">\n        <!-- eslint-disable -->\n        <li\n          v-for=\"year in yearRange\"\n          v-if=\"!isYearOutOfRange(year)\"\n          class=\"n-calendar__year\"\n          tabindex=\"0\"\n          :class=\"getYearClasses(year)\"\n          @click=\"selectYear(year)\"\n          @keydown.enter=\"selectYear(year)\"\n        >\n          {{ year }}\n        </li>\n          <!-- eslint-enable -->\n      </ul>\n\n      <div v-show=\"!showYearPicker\">\n        <n-calendar-controls\n          ref=\"controls\"\n          :is-static=\"isStatic\"\n          :has-year=\"hasYear\"\n          :date-in-view=\"dateInView\"\n          :lang=\"lang\"\n          :max-date=\"maxDate\"\n          :min-date=\"minDate\"\n          @go-to-date=\"onGoToDate\"\n        ></n-calendar-controls>\n\n        <n-calendar-month\n          ref=\"month\"\n          :date-filter=\"dateFilter\"\n          :date-in-view=\"dateInView\"\n          :lang=\"lang\"\n          :max-date=\"maxDate\"\n          :min-date=\"minDate\"\n          :selected=\"value\"\n          :start-of-week=\"startOfWeek\"\n          @change=\"onMonthChange\"\n          @date-select=\"onDateSelect\"\n        ></n-calendar-month>\n      </div>\n\n      <div v-if=\"$slots.footer\" class=\"n-calendar__footer\">\n        <slot name=\"footer\"></slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NCalendarControls from \"./NCalendarControls.vue\";\nimport NCalendarMonth from \"./NCalendarMonth.vue\";\n\nimport dateUtils from \"../helpers/date\";\nimport { scrollIntoView } from \"../helpers/element-scroll\";\n\nexport default {\n  name: \"NCalendar\",\n\n  components: {\n    NCalendarControls,\n    NCalendarMonth\n  },\n\n  props: {\n    value: Date,\n    minDate: Date,\n    maxDate: Date,\n    isStatic: {\n      type: Boolean,\n      default: false\n    },\n    hasYear: {\n      type: Boolean,\n      default: true\n    },\n    controls: {\n      type: Boolean,\n      default: true\n    },\n    startOfWeek: {\n      type: Number,\n      default: 0\n    },\n    lang: {\n      type: Object,\n      default() {\n        return dateUtils.defaultLang;\n      }\n    },\n    yearRange: {\n      type: Array,\n      default() {\n        const thisYear = new Date().getFullYear();\n\n        // Generates a range of 200 years\n        // (100 years into the past and 100 years into the future, including the current year)\n        return Array.apply(null, Array(200)).map((item, index) => {\n          return thisYear - 100 + index;\n        });\n      }\n    },\n    dateFilter: Function,\n    color: {\n      type: String,\n      default: \"primary\" // 'primary' or 'accent'\n    },\n    orientation: {\n      type: String,\n      default: \"portrait\" // 'portrait' or 'landscape'\n    }\n  },\n\n  data() {\n    return {\n      today: new Date(),\n      dateInView: this.getDateInRange(this.value, new Date()),\n      showYearPicker: false\n    };\n  },\n\n  computed: {\n    classes() {\n      return [\n        `n-calendar--color-${this.color}`,\n        `n-calendar--orientation-${this.orientation}`\n      ];\n    },\n\n    headerYear() {\n      return this.dateInView\n        ? this.dateInView.getFullYear()\n        : this.today.getFullYear();\n    },\n\n    headerDay() {\n      return this.value\n        ? dateUtils.getDayAbbreviated(this.value, this.lang)\n        : dateUtils.getDayAbbreviated(this.today, this.lang);\n    },\n\n    headerDate() {\n      const date = this.value ? this.value : this.today;\n\n      return (\n        dateUtils.getMonthAbbreviated(date, this.lang) +\n        \" \" +\n        dateUtils.getDayOfMonth(date, this.lang)\n      );\n    }\n  },\n\n  watch: {\n    value() {\n      if (this.value) {\n        this.dateInView = dateUtils.clone(this.value);\n      }\n    },\n\n    showYearPicker() {\n      if (this.showYearPicker) {\n        this.$nextTick(() => {\n          const el =\n            this.$refs.years.querySelector(\".is-selected\") ||\n            this.$refs.years.querySelector(\".is-current-year\");\n\n          scrollIntoView(el, { marginTop: 126 });\n        });\n      }\n    }\n  },\n\n  methods: {\n    selectYear(year) {\n      const newDate = dateUtils.clone(this.dateInView);\n      newDate.setFullYear(year);\n\n      this.dateInView = this.getDateInRange(newDate);\n      this.showYearPicker = false;\n    },\n\n    getDateInRange(date, fallback) {\n      date = date || fallback;\n\n      if (this.minDate && date.getTime() < this.minDate.getTime()) {\n        return this.minDate;\n      }\n\n      if (this.maxDate && date.getTime() > this.maxDate.getTime()) {\n        return this.maxDate;\n      }\n\n      return date;\n    },\n\n    getYearClasses(year) {\n      return {\n        \"is-current-year\": this.isYearCurrent(year),\n        \"is-selected\": this.isYearSelected(year)\n      };\n    },\n\n    isYearCurrent(year) {\n      return year === this.today.getFullYear();\n    },\n\n    isYearSelected(year) {\n      return this.dateInView && year === this.dateInView.getFullYear();\n    },\n\n    isYearOutOfRange(year) {\n      if (this.minDate && year < this.minDate.getFullYear()) {\n        return true;\n      }\n\n      if (this.maxDate && year > this.maxDate.getFullYear()) {\n        return true;\n      }\n\n      return false;\n    },\n\n    onDateSelect(date) {\n      this.$emit(\"input\", date);\n      this.$emit(\"date-select\", date);\n    },\n\n    onGoToDate(date, options = { isForward: true }) {\n      this.$refs.month.goToDate(date, options);\n    },\n\n    onMonthChange(newDate) {\n      this.dateInView = newDate;\n      this.$emit(\"month-change\", newDate);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/imports.scss\";\n\n$n-calendar-padding: rem(8px) !default;\n\n.n-calendar {\n  color: $primary-text-color;\n  font-family: $font-stack;\n}\n\n.n-calendar__header {\n  color: white;\n  line-height: 1;\n  padding: rem(16px);\n}\n\n.n-calendar__header-year,\n.n-calendar__header-details {\n  cursor: pointer;\n  opacity: 0.75;\n  transition: opacity 0.2s ease;\n\n  &:hover,\n  body[modality=\"keyboard\"] &:focus,\n  &.is-active {\n    opacity: 1;\n  }\n\n  body[modality=\"keyboard\"] &:focus {\n    outline: 1px dotted white;\n    outline-offset: 1px;\n  }\n}\n\n.n-calendar__header-year {\n  font-size: rem(15px);\n  font-weight: 500;\n  margin-bottom: rem(8px);\n}\n\n.n-calendar__header-details {\n  font-size: rem(22px);\n}\n\n.n-calendar__body {\n  height: 19.4rem;\n  overflow: hidden;\n  padding: $n-calendar-padding;\n  position: relative;\n  width: ($n-calendar-cell-size * 7) + ($n-calendar-padding * 2);\n}\n\n.n-calendar__years {\n  height: rem(312px);\n  list-style: none;\n  margin: -$n-calendar-padding;\n  overflow-y: auto;\n  padding: rem(8px 0);\n}\n\n.n-calendar__year {\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  font-size: rem(16px);\n  height: rem(36px);\n  justify-content: center;\n  outline: none;\n\n  &.is-selected {\n    font-size: rem(24px);\n    font-weight: 500;\n    height: rem(40px);\n  }\n}\n\n// ================================================\n// Orientations\n// ================================================\n\n.n-calendar--orientation-landscape {\n  display: flex;\n\n  .n-calendar__header {\n    min-width: rem(128px);\n  }\n\n  .n-calendar__header-date {\n    margin-bottom: rem(12px);\n  }\n\n  .n-calendar__header-date {\n    display: block;\n    padding-top: rem(4px);\n  }\n}\n\n// ================================================\n// Colors\n// ================================================\n\n.n-calendar--color-primary {\n  .n-calendar__header {\n    background-color: $brand-primary-color;\n  }\n\n  .n-calendar__year {\n    &:hover,\n    body[modality=\"keyboard\"] &:focus {\n      color: $brand-primary-color;\n    }\n\n    &.is-selected {\n      color: $brand-primary-color;\n    }\n  }\n\n  .n-calendar-week__date {\n    &.is-today {\n      color: $brand-primary-color;\n    }\n\n    &.is-selected,\n    body[modality=\"keyboard\"] &.is-selected {\n      background-color: $brand-primary-color;\n    }\n  }\n}\n\n.n-calendar--color-accent {\n  .n-calendar__header {\n    background-color: $brand-accent-color;\n  }\n\n  .n-calendar__year {\n    &:hover,\n    body[modality=\"keyboard\"] &:focus {\n      color: $brand-accent-color;\n    }\n\n    &.is-selected {\n      color: $brand-accent-color;\n    }\n  }\n\n  .n-calendar-week__date {\n    &.is-today {\n      color: $brand-accent-color;\n    }\n\n    &.is-selected,\n    body[modality=\"keyboard\"] &.is-selected {\n      background-color: $brand-accent-color;\n    }\n  }\n}\n</style>\n"]}]}