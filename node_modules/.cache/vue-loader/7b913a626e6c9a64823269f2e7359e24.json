{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NTableColumn.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NTableColumn.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/sass/animations.scss\";\n@import \"@/assets/sass/colors.scss\";\n@import \"@/assets/sass/config.scss\";\n.n-table-column {\n  flex-grow: 1;\n  flex-basis: 0;\n  overflow: hidden;\n  padding: 10px 3px;\n  font-size: 0.95rem;\n  text-overflow: ellipsis;\n  display: flex;\n  align-items: center;\n  &.align-center {\n    justify-content: center;\n  }\n  &.border-right:last-child {\n    border-right: 1px solid #fff !important;\n  }\n  &_parent {\n    display: inline-block;\n    padding: 0;\n    text-align: center;\n    font-size: 0.9rem;\n    font-weight: 500;\n    border-right: 1px solid lightgray;\n    flex-grow: unset;\n    flex-basis: unset;\n    &:last-child {\n      border-right: 0;\n    }\n  }\n}\n",{"version":3,"sources":["NTableColumn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NTableColumn.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    class=\"n-table-column\"\n    :class=\"{\n      'border-right': borderRight,\n      'n-table-column_parent': span,\n      'align-center': align === 'center'\n    }\"\n    :style=\"computedStyle\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"NTableColumn\",\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    sortable: {\n      type: Boolean,\n      default: false\n    },\n    sortMethod: {\n      type: [Function, Boolean],\n      default: false\n    },\n    prop: {\n      type: String,\n      default: \"\"\n    },\n    align: {\n      type: String,\n      default: \"left\"\n    },\n    labelAlign: {\n      type: String,\n      default: \"\"\n    },\n    isExpandable: {\n      type: Boolean,\n      default: false\n    },\n    isNested: {\n      type: Boolean,\n      default: false\n    },\n    nestedWidth: {\n      type: [Boolean, Number],\n      default: 1\n    },\n    borderRight: {\n      type: Boolean,\n      default: false\n    },\n    customHeader: {\n      type: [Boolean, String],\n      default: false\n    },\n    maxWidth: {\n      type: Number,\n      default: null\n    },\n    minWidth: {\n      type: Number,\n      default: null\n    },\n    span: {\n      type: [Object],\n      default: null\n    }\n  },\n  computed: {\n    classes() {\n      const classes = [];\n      return classes;\n    },\n\n    computedStyle() {\n      const styles = {\n        \"text-align\": this.align,\n        \"max-width\": this.maxWidth + \"px\",\n        \"min-width\": this.minWidth + \"px\"\n      };\n      if (this.width) {\n        styles.width = this.width + \"px\";\n        styles[\"text-align\"] = \"center\";\n      }\n      if (this.nestedWidth) {\n        styles.flex = this.nestedWidth;\n      }\n      return styles;\n    }\n  },\n  created() {\n    this.$emit(\"created\");\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"@/assets/sass/animations.scss\";\n@import \"@/assets/sass/colors.scss\";\n@import \"@/assets/sass/config.scss\";\n.n-table-column {\n  flex-grow: 1;\n  flex-basis: 0;\n  overflow: hidden;\n  padding: 10px 3px;\n  font-size: 0.95rem;\n  text-overflow: ellipsis;\n  display: flex;\n  align-items: center;\n  &.align-center {\n    justify-content: center;\n  }\n  &.border-right:last-child {\n    border-right: 1px solid #fff !important;\n  }\n  &_parent {\n    display: inline-block;\n    padding: 0;\n    text-align: center;\n    font-size: 0.9rem;\n    font-weight: 500;\n    border-right: 1px solid lightgray;\n    flex-grow: unset;\n    flex-basis: unset;\n    &:last-child {\n      border-right: 0;\n    }\n  }\n}\n</style>\n"]}]}