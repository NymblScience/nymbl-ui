{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NConfirm.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NConfirm.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/sass/imports.scss\";\n\n.n-confirm__message {\n  font-size: rem(15px);\n}\n\n.n-confirm__footer {\n  display: flex;\n}\n",{"version":3,"sources":["NConfirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"NConfirm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <n-modal\n    ref=\"modal\"\n    class=\"n-confirm\"\n    role=\"alertdialog\"\n    :dismiss-on=\"dismissOn\"\n    :dismissible=\"!loading\"\n    :title=\"title\"\n    :transition=\"transition\"\n    :size=\"size\"\n    @close=\"onModalClose\"\n    @hide=\"onModalHide\"\n    @open=\"onModalOpen\"\n    @reveal=\"onModalReveal\"\n  >\n    <div class=\"n-confirm__message\">\n      <slot :data=\"data\">{{ data }}</slot>\n      <span v-if=\"isPlugin\">{{ body }}</span>\n    </div>\n\n    <div slot=\"footer\" class=\"n-confirm__footer\">\n      <n-button\n        ref=\"denyButton\"\n        :disabled=\"loading\"\n        :icon=\"denyButtonIcon\"\n        button-type=\"text\"\n        variant=\"danger\"\n        @click=\"deny\"\n        >{{ denyButtonText }}</n-button\n      >\n\n      <n-button\n        ref=\"confirmButton\"\n        button-type=\"text\"\n        :icon=\"confirmButtonIcon\"\n        :loading=\"loading\"\n        @click=\"confirm\"\n        >{{ confirmButtonText }}</n-button\n      >\n    </div>\n  </n-modal>\n</template>\n\n<script>\nimport NButton from \"./NButton.vue\";\nimport NModal from \"./NModal.vue\";\n\nimport classlist from \"../helpers/classlist\";\n\nexport default {\n  name: \"NConfirm\",\n\n  components: {\n    NButton,\n    NModal\n  },\n\n  props: {\n    title: {\n      type: String,\n      default: \"NConfirm\"\n    },\n    type: {\n      type: String,\n      default: \"primary\" // any of the color prop values of NButton\n    },\n    body: {\n      type: String,\n      default: \"Are you sure?\"\n    },\n    isPlugin: {\n      type: Boolean,\n      default: false\n    },\n    size: String,\n    confirmButtonText: {\n      type: String,\n      default: \"OK\"\n    },\n\n    confirmButtonIcon: String,\n    denyButtonText: {\n      type: String,\n      default: \"Cancel\"\n    },\n    denyButtonIcon: String,\n    autofocus: {\n      type: String,\n      default: \"none\" // 'confirm-button', 'deny-button' or 'none'\n    },\n    closeOnConfirm: {\n      type: Boolean,\n      default: true\n    },\n    dismissOn: String,\n    transition: String,\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      data: \"\"\n    };\n  },\n\n  methods: {\n    open(data) {\n      this.$refs.modal.open();\n      if (data) {\n        this.data = data;\n      }\n    },\n\n    close() {\n      this.$refs.modal.close();\n    },\n\n    confirm() {\n      this.$emit(\"confirm\", this.data);\n\n      if (this.closeOnConfirm) {\n        this.$refs.modal.close();\n      }\n    },\n\n    deny() {\n      this.$refs.modal.close();\n      this.$emit(\"deny\");\n    },\n\n    onModalOpen() {\n      let button;\n\n      if (this.autofocus === \"confirm-button\") {\n        button = this.$refs.confirmButton.$el;\n      } else if (this.autofocus === \"deny-button\") {\n        button = this.$refs.denyButton.$el;\n      }\n\n      if (button) {\n        classlist.add(button, \"has-focus-ring\");\n        button.addEventListener(\"blur\", this.removeAutoFocus);\n        button.focus();\n      }\n\n      this.$emit(\"open\");\n    },\n\n    onModalReveal() {\n      this.$emit(\"reveal\");\n    },\n\n    onModalClose() {\n      this.$emit(\"close\");\n    },\n\n    onModalHide() {\n      this.$emit(\"hide\");\n    },\n\n    removeAutoFocus() {\n      let button;\n\n      if (this.autofocus === \"confirm-button\") {\n        button = this.$refs.confirmButton.$el;\n      } else if (this.autofocus === \"deny-button\") {\n        button = this.$refs.denyButton.$el;\n      }\n\n      if (button) {\n        classlist.remove(button, \"has-focus-ring\");\n\n        // This listener should run only once\n        button.removeEventListener(\"blur\", this.removeAutoFocus);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/imports.scss\";\n\n.n-confirm__message {\n  font-size: rem(15px);\n}\n\n.n-confirm__footer {\n  display: flex;\n}\n</style>\n"]}]}