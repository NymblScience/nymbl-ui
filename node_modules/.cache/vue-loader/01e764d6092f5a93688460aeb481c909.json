{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NTextbox.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NTextbox.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/sass/imports.scss\";\n\n.n-textbox {\n  align-items: flex-start;\n  display: flex;\n  position: relative;\n  font-family: $font-stack;\n  margin-bottom: $ui-input-margin-bottom;\n  &__clearable {\n    position: absolute;\n    bottom: -4px;\n    right: 0;\n  }\n  &:hover:not(.is-disabled) {\n    .n-textbox__label-text {\n      color: $ui-input-label-color--hover;\n    }\n\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-color: $ui-input-border-color--hover;\n    }\n  }\n\n  &.is-active:not(.is-disabled) {\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-color: $ui-input-border-color--active;\n      border-bottom-width: $ui-input-border-width--active;\n    }\n\n    .n-textbox__label-text,\n    .n-textbox__icon-wrapper .ui-icon {\n      color: $ui-input-label-color--active;\n    }\n  }\n\n  &.has-label {\n    .n-textbox__icon-wrapper {\n      padding-top: $ui-input-icon-margin-top--with-label;\n    }\n  }\n\n  &.has-counter {\n    .n-textbox__feedback-text {\n      padding-right: rem(48px);\n    }\n  }\n\n  &.has-floating-label {\n    .n-textbox__label-text {\n      // Behaves like a block, but width is the width of its content.\n      // Needed here so label doesn't overflow parent when scaled.\n      display: table;\n\n      &.is-inline {\n        color: $ui-input-label-color; // So the hover styles don't override it\n        cursor: text;\n        transform: translateY($ui-input-label-top--inline) scale(1.1);\n      }\n\n      &.is-floating {\n        transform: translateY(0) scale(1);\n      }\n    }\n\n    // Fixes glitch in chrome where label and input value overlap each other\n    // when webkit-autofill value has not been propagated yet (e.g. https://github.com/vuejs/vue/issues/1331)\n    // The webkit-autofill value will only be propagated on first click into the viewport.\n    // Before that .is-inline will be wrongly set and cause the auto filled input value and the label to overlap.\n    // This fix will style the wrong .is-inline like an .is-floating in case :-webkit-autofill is set.\n    .n-textbox__label\n      > input:-webkit-autofill\n      + .n-textbox__label-text.is-inline {\n      transform: translateY(0) scale(1);\n    }\n  }\n\n  &.is-invalid:not(.is-disabled) {\n    .n-textbox__label-text,\n    .n-textbox__icon-wrapper .ui-icon,\n    .n-textbox__counter {\n      color: $ui-input-label-color--invalid;\n    }\n\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-color: $ui-input-border-color--invalid;\n    }\n\n    .n-textbox__feedback {\n      color: $ui-input-feedback-color--invalid;\n    }\n  }\n\n  &.is-disabled {\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-style: $ui-input-border-style--disabled;\n      border-bottom-width: $ui-input-border-width--active;\n      color: $ui-input-text-color--disabled;\n    }\n\n    .n-textbox__icon-wrapper .ui-icon {\n      opacity: $ui-input-icon-opacity--disabled;\n    }\n\n    .n-textbox__feedback {\n      opacity: $ui-input-feedback-opacity--disabled;\n    }\n  }\n}\n\n.n-textbox__label {\n  display: flex;\n  flex-direction: column-reverse;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n.n-textbox__icon-wrapper {\n  flex-shrink: 0;\n  margin-right: rem(12px);\n  padding-top: $ui-input-icon-margin-top;\n\n  .ui-icon {\n    color: $ui-input-icon-color;\n  }\n}\n\n.n-textbox__content {\n  flex-grow: 1;\n}\n\n.n-textbox__label-text {\n  color: $ui-input-label-color;\n  cursor: default;\n  font-size: $ui-input-label-font-size;\n  line-height: $ui-input-label-line-height;\n  margin-bottom: $ui-input-label-margin-bottom;\n  transform-origin: left;\n  transition: color 0.1s ease, transform 0.2s ease;\n}\n\n.n-textbox__input,\n.n-textbox__textarea {\n  background: none;\n  border: none;\n  border-bottom-color: $ui-input-border-color;\n  border-bottom-style: solid;\n  border-bottom-width: $ui-input-border-width;\n  border-radius: 0;\n  color: $ui-input-text-color;\n  cursor: auto;\n  display: block;\n  font-family: inherit;\n  font-size: $ui-input-text-font-size;\n  font-weight: normal;\n  margin: 0;\n  outline: none;\n  padding: 0;\n  transition: border 0.1s ease;\n  width: 100%;\n}\n\n.n-textbox__input {\n  height: $ui-input-height;\n}\n\n.n-textbox__textarea {\n  overflow-x: hidden;\n  overflow-y: auto;\n  padding-bottom: rem(6px);\n  resize: vertical;\n}\n\n.n-textbox__feedback {\n  color: $ui-input-feedback-color;\n  font-size: $ui-input-feedback-font-size;\n  line-height: $ui-input-feedback-line-height;\n  margin: 0;\n  padding-top: $ui-input-feedback-padding-top;\n  position: relative;\n}\n\n.n-textbox__counter {\n  position: absolute;\n  right: 0;\n  top: $ui-input-feedback-padding-top;\n}\n\n// ================================================\n// Icon position\n// ================================================\n\n.n-textbox--icon-position-right {\n  .n-textbox__icon-wrapper {\n    margin-left: rem(8px);\n    margin-right: 0;\n    order: 1;\n  }\n}\n\n@import \"@/assets/sass/animations.scss\";\n@import \"@/assets/sass/colors.scss\";\n@import \"@/assets/sass/config.scss\";\n\n.n-textbox .n-textbox__label-text {\n  @extend .form-label-style;\n}\n\n.n-textbox .n-textbox__input::placeholder {\n  color: $form-color-placeholder;\n}\n\n.n-textbox .n-textbox__input,\n.n-textbox__textarea {\n  color: $form-color;\n}\n\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__label-text,\n.n-textbox.n-textbox.is-invalid:not(.is-disabled)\n  .n-textbox__icon-wrapper\n  .ui-icon,\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__counter {\n  color: $form-color-invalid;\n}\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__input,\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__textarea {\n  color: $form-color-invalid;\n  border-bottom-color: $form-color-invalid;\n}\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__feedback {\n  color: $form-color-invalid;\n}\n\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__input,\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__textarea {\n  border-bottom-color: $form-color-active;\n}\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__label-text,\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__icon-wrapper\n  .ui-icon {\n  color: $form-color-active;\n}\n\n.n-textbox.n-text.is-disabled .n-textbox__input {\n  border-bottom-width: 0;\n  cursor: default;\n  color: $form-color;\n}\n\n// Disable spinners for number input.\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n",{"version":3,"sources":["NTextbox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"NTextbox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"n-textbox\" :class=\"classes\">\n    <div v-if=\"icon || $slots.icon\" class=\"n-textbox__icon-wrapper\">\n      <slot name=\"icon\"> </slot>\n    </div>\n\n    <div class=\"n-textbox__content\">\n      <label class=\"n-textbox__label\">\n        <input\n          v-if=\"!multiLine\"\n          ref=\"input\"\n          v-autofocus=\"autofocus\"\n          class=\"n-textbox__input\"\n          :autocomplete=\"autocomplete ? autocomplete : null\"\n          :disabled=\"disabled\"\n          :max=\"maxValue\"\n          :maxlength=\"enforceMaxlength ? maxlength : null\"\n          :min=\"minValue\"\n          :name=\"name\"\n          :number=\"type === 'number' ? true : null\"\n          :placeholder=\"hasFloatingLabel ? null : placeholder\"\n          :readonly=\"readonly\"\n          :required=\"required\"\n          :step=\"stepValue\"\n          :tabindex=\"tabindex\"\n          :type=\"type\"\n          :value=\"value\"\n          :pattern=\"pattern\"\n          @blur=\"onBlur\"\n          @change=\"onChange\"\n          @focus=\"onFocus\"\n          @click.native=\"click\"\n          @input=\"updateValue($event.target.value)\"\n          @keydown.enter=\"onKeydownEnter\"\n          @keydown=\"onKeydown\"\n        />\n\n        <textarea\n          v-else\n          ref=\"textarea\"\n          v-autofocus=\"autofocus\"\n          class=\"n-textbox__textarea\"\n          :autocomplete=\"autocomplete ? autocomplete : null\"\n          :disabled=\"disabled\"\n          :maxlength=\"enforceMaxlength ? maxlength : null\"\n          :name=\"name\"\n          :placeholder=\"hasFloatingLabel ? null : placeholder\"\n          :readonly=\"readonly\"\n          :required=\"required\"\n          :rows=\"rows\"\n          :tabindex=\"tabindex\"\n          :value=\"value\"\n          @blur=\"onBlur\"\n          @change=\"onChange\"\n          @focus=\"onFocus\"\n          @input=\"updateValue($event.target.value)\"\n          @keydown.enter=\"onKeydownEnter\"\n          @keydown=\"onKeydown\"\n        ></textarea>\n\n        <n-button-icon\n          v-if=\"clearable && value.length > 0\"\n          is-raised\n          variant=\"danger\"\n          class=\"n-textbox__clearable\"\n          title=\"Clear\"\n          @click=\"clear()\"\n        >\n          <close-icon :size=\"18\" />\n        </n-button-icon>\n\n        <div\n          v-if=\"label || $slots.default\"\n          class=\"n-textbox__label-text\"\n          :class=\"labelClasses\"\n        >\n          <slot>{{ label }}</slot>\n        </div>\n      </label>\n\n      <div v-if=\"hasFeedback || maxlength\" class=\"n-textbox__feedback\">\n        <div v-if=\"showError\" class=\"n-textbox__feedback-text\">\n          <slot name=\"error\">{{ error }}</slot>\n        </div>\n\n        <div v-else-if=\"showHelp\" class=\"n-textbox__feedback-text\">\n          <slot name=\"help\">{{ help }}</slot>\n        </div>\n\n        <div v-if=\"maxlength && showMaxLength\" class=\"n-textbox__counter\">\n          {{ valueLength + \"/\" + maxlength }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autofocus from \"../directives/autofocus\";\nimport CloseIcon from \"../icons/Close.vue\";\n\nimport autosize from \"autosize\";\n\nexport default {\n  name: \"NTextbox\",\n\n  directives: {\n    autofocus\n  },\n  components: {\n    CloseIcon\n  },\n  props: {\n    name: String,\n    placeholder: String,\n    tabindex: [String, Number],\n    value: {\n      type: [String, Number],\n      default: \"\"\n    },\n    icon: String,\n    iconPosition: {\n      type: String,\n      default: \"left\" // 'left' or 'right'\n    },\n    label: String,\n    floatingLabel: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: \"text\" // all the possible HTML5 input types, except those that have a special UI\n    },\n    multiLine: {\n      type: Boolean,\n      default: false\n    },\n    rows: {\n      type: Number,\n      default: 2\n    },\n    autocomplete: String,\n    autofocus: {\n      type: Boolean,\n      default: false\n    },\n    autosize: {\n      type: Boolean,\n      default: true\n    },\n    min: Number,\n    max: Number,\n    step: {\n      type: String,\n      default: \"any\"\n    },\n    maxlength: Number,\n    enforceMaxlength: {\n      type: Boolean,\n      default: true\n    },\n    showMaxLength: {\n      type: Boolean,\n      default: true\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    help: String,\n    pattern: String,\n    error: String,\n    invalid: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    clearable: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      isActive: false,\n      isTouched: false,\n      initialValue: this.value,\n      autosizeInitialized: false\n    };\n  },\n  computed: {\n    classes() {\n      return [\n        `n-textbox--icon-position-${this.iconPosition}`,\n        { \"is-clearable\": this.clearable },\n        { \"is-active\": this.isActive },\n        { \"is-invalid\": this.invalid },\n        { \"is-touched\": this.isTouched },\n        { \"is-multi-line\": this.multiLine },\n        { \"has-counter\": this.maxlength },\n        { \"is-disabled\": this.disabled },\n        { \"has-label\": this.hasLabel },\n        { \"has-floating-label\": this.hasFloatingLabel }\n      ];\n    },\n\n    labelClasses() {\n      return {\n        \"is-inline\": this.hasFloatingLabel && this.isLabelInline,\n        \"is-floating\": this.hasFloatingLabel && !this.isLabelInline\n      };\n    },\n\n    hasLabel() {\n      return Boolean(this.label) || Boolean(this.$slots.default);\n    },\n\n    hasFloatingLabel() {\n      return this.hasLabel && this.floatingLabel;\n    },\n\n    isLabelInline() {\n      return this.valueLength === 0 && !this.isActive;\n    },\n\n    minValue() {\n      if (this.type === \"number\" && this.min !== undefined) {\n        return this.min;\n      }\n\n      return null;\n    },\n\n    maxValue() {\n      if (this.type === \"number\" && this.max !== undefined) {\n        return this.max;\n      }\n\n      return null;\n    },\n\n    stepValue() {\n      return this.type === \"number\" ? this.step : null;\n    },\n\n    valueLength() {\n      return this.value ? this.value.length : 0;\n    },\n\n    hasFeedback() {\n      return this.showError || this.showHelp;\n    },\n\n    showError() {\n      return (\n        this.invalid && (Boolean(this.error) || Boolean(this.$slots.error))\n      );\n    },\n\n    showHelp() {\n      return Boolean(this.help) || Boolean(this.$slots.help);\n    }\n  },\n  watch: {\n    value(value) {\n      // Normalize the value to an empty string if it's null\n      if (value === null) {\n        this.initialValue = \"\";\n        this.updateValue(\"\");\n      }\n    }\n  },\n\n  created() {\n    // Normalize the value to an empty string if it's null\n    if (this.value === null) {\n      this.initialValue = \"\";\n      this.updateValue(\"\");\n    }\n  },\n\n  mounted() {\n    if (this.multiLine && this.autosize) {\n      autosize(this.$refs.textarea);\n      this.autosizeInitialized = true;\n    }\n  },\n\n  beforeDestroy() {\n    if (this.autosizeInitialized) {\n      autosize.destroy(this.$refs.textarea);\n    }\n  },\n\n  methods: {\n    updateValue(value) {\n      this.$emit(\"input\", value);\n    },\n\n    onChange(e) {\n      this.$emit(\"change\", this.value, e);\n    },\n\n    onFocus(e) {\n      this.isActive = true;\n      this.$emit(\"focus\", e);\n    },\n\n    onBlur(e) {\n      this.isActive = false;\n      this.$emit(\"blur\", e);\n\n      if (!this.isTouched) {\n        this.isTouched = true;\n        this.$emit(\"touch\");\n      }\n    },\n\n    onKeydown(e) {\n      this.$emit(\"keydown\", e);\n    },\n\n    onKeydownEnter(e) {\n      this.$emit(\"keydown-enter\", e);\n    },\n\n    clear() {\n      this.updateValue(\"\");\n      this.$emit(\"clear\");\n    },\n\n    reset() {\n      // Blur the input if it's focused to prevent required errors\n      // when it's value is reset\n      if (\n        document.activeElement === this.$refs.input ||\n        document.activeElement === this.$refs.textarea\n      ) {\n        document.activeElement.blur();\n      }\n\n      this.updateValue(this.initialValue);\n      this.resetTouched();\n    },\n\n    resetTouched(options = { touched: false }) {\n      this.isTouched = options.touched;\n    },\n\n    refreshSize() {\n      if (this.autosizeInitialized) {\n        autosize.update(this.$refs.textarea);\n      }\n    },\n\n    focus() {\n      (this.$refs.input || this.$refs.textarea).focus();\n    },\n    click() {\n      this.$emit(\"click\");\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/imports.scss\";\n\n.n-textbox {\n  align-items: flex-start;\n  display: flex;\n  position: relative;\n  font-family: $font-stack;\n  margin-bottom: $ui-input-margin-bottom;\n  &__clearable {\n    position: absolute;\n    bottom: -4px;\n    right: 0;\n  }\n  &:hover:not(.is-disabled) {\n    .n-textbox__label-text {\n      color: $ui-input-label-color--hover;\n    }\n\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-color: $ui-input-border-color--hover;\n    }\n  }\n\n  &.is-active:not(.is-disabled) {\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-color: $ui-input-border-color--active;\n      border-bottom-width: $ui-input-border-width--active;\n    }\n\n    .n-textbox__label-text,\n    .n-textbox__icon-wrapper .ui-icon {\n      color: $ui-input-label-color--active;\n    }\n  }\n\n  &.has-label {\n    .n-textbox__icon-wrapper {\n      padding-top: $ui-input-icon-margin-top--with-label;\n    }\n  }\n\n  &.has-counter {\n    .n-textbox__feedback-text {\n      padding-right: rem(48px);\n    }\n  }\n\n  &.has-floating-label {\n    .n-textbox__label-text {\n      // Behaves like a block, but width is the width of its content.\n      // Needed here so label doesn't overflow parent when scaled.\n      display: table;\n\n      &.is-inline {\n        color: $ui-input-label-color; // So the hover styles don't override it\n        cursor: text;\n        transform: translateY($ui-input-label-top--inline) scale(1.1);\n      }\n\n      &.is-floating {\n        transform: translateY(0) scale(1);\n      }\n    }\n\n    // Fixes glitch in chrome where label and input value overlap each other\n    // when webkit-autofill value has not been propagated yet (e.g. https://github.com/vuejs/vue/issues/1331)\n    // The webkit-autofill value will only be propagated on first click into the viewport.\n    // Before that .is-inline will be wrongly set and cause the auto filled input value and the label to overlap.\n    // This fix will style the wrong .is-inline like an .is-floating in case :-webkit-autofill is set.\n    .n-textbox__label\n      > input:-webkit-autofill\n      + .n-textbox__label-text.is-inline {\n      transform: translateY(0) scale(1);\n    }\n  }\n\n  &.is-invalid:not(.is-disabled) {\n    .n-textbox__label-text,\n    .n-textbox__icon-wrapper .ui-icon,\n    .n-textbox__counter {\n      color: $ui-input-label-color--invalid;\n    }\n\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-color: $ui-input-border-color--invalid;\n    }\n\n    .n-textbox__feedback {\n      color: $ui-input-feedback-color--invalid;\n    }\n  }\n\n  &.is-disabled {\n    .n-textbox__input,\n    .n-textbox__textarea {\n      border-bottom-style: $ui-input-border-style--disabled;\n      border-bottom-width: $ui-input-border-width--active;\n      color: $ui-input-text-color--disabled;\n    }\n\n    .n-textbox__icon-wrapper .ui-icon {\n      opacity: $ui-input-icon-opacity--disabled;\n    }\n\n    .n-textbox__feedback {\n      opacity: $ui-input-feedback-opacity--disabled;\n    }\n  }\n}\n\n.n-textbox__label {\n  display: flex;\n  flex-direction: column-reverse;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n.n-textbox__icon-wrapper {\n  flex-shrink: 0;\n  margin-right: rem(12px);\n  padding-top: $ui-input-icon-margin-top;\n\n  .ui-icon {\n    color: $ui-input-icon-color;\n  }\n}\n\n.n-textbox__content {\n  flex-grow: 1;\n}\n\n.n-textbox__label-text {\n  color: $ui-input-label-color;\n  cursor: default;\n  font-size: $ui-input-label-font-size;\n  line-height: $ui-input-label-line-height;\n  margin-bottom: $ui-input-label-margin-bottom;\n  transform-origin: left;\n  transition: color 0.1s ease, transform 0.2s ease;\n}\n\n.n-textbox__input,\n.n-textbox__textarea {\n  background: none;\n  border: none;\n  border-bottom-color: $ui-input-border-color;\n  border-bottom-style: solid;\n  border-bottom-width: $ui-input-border-width;\n  border-radius: 0;\n  color: $ui-input-text-color;\n  cursor: auto;\n  display: block;\n  font-family: inherit;\n  font-size: $ui-input-text-font-size;\n  font-weight: normal;\n  margin: 0;\n  outline: none;\n  padding: 0;\n  transition: border 0.1s ease;\n  width: 100%;\n}\n\n.n-textbox__input {\n  height: $ui-input-height;\n}\n\n.n-textbox__textarea {\n  overflow-x: hidden;\n  overflow-y: auto;\n  padding-bottom: rem(6px);\n  resize: vertical;\n}\n\n.n-textbox__feedback {\n  color: $ui-input-feedback-color;\n  font-size: $ui-input-feedback-font-size;\n  line-height: $ui-input-feedback-line-height;\n  margin: 0;\n  padding-top: $ui-input-feedback-padding-top;\n  position: relative;\n}\n\n.n-textbox__counter {\n  position: absolute;\n  right: 0;\n  top: $ui-input-feedback-padding-top;\n}\n\n// ================================================\n// Icon position\n// ================================================\n\n.n-textbox--icon-position-right {\n  .n-textbox__icon-wrapper {\n    margin-left: rem(8px);\n    margin-right: 0;\n    order: 1;\n  }\n}\n\n@import \"@/assets/sass/animations.scss\";\n@import \"@/assets/sass/colors.scss\";\n@import \"@/assets/sass/config.scss\";\n\n.n-textbox .n-textbox__label-text {\n  @extend .form-label-style;\n}\n\n.n-textbox .n-textbox__input::placeholder {\n  color: $form-color-placeholder;\n}\n\n.n-textbox .n-textbox__input,\n.n-textbox__textarea {\n  color: $form-color;\n}\n\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__label-text,\n.n-textbox.n-textbox.is-invalid:not(.is-disabled)\n  .n-textbox__icon-wrapper\n  .ui-icon,\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__counter {\n  color: $form-color-invalid;\n}\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__input,\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__textarea {\n  color: $form-color-invalid;\n  border-bottom-color: $form-color-invalid;\n}\n.n-textbox.n-textbox.is-invalid:not(.is-disabled) .n-textbox__feedback {\n  color: $form-color-invalid;\n}\n\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__input,\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__textarea {\n  border-bottom-color: $form-color-active;\n}\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__label-text,\n.n-textbox.n-textbox.is-active:not(.is-disabled):not(.is-invalid)\n  .n-textbox__icon-wrapper\n  .ui-icon {\n  color: $form-color-active;\n}\n\n.n-textbox.n-text.is-disabled .n-textbox__input {\n  border-bottom-width: 0;\n  cursor: default;\n  color: $form-color;\n}\n\n// Disable spinners for number input.\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n</style>\n"]}]}