{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NCalendarWeek.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NCalendarWeek.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport dateUtils from \"../helpers/date\";\nexport default {\n  name: \"NCalendarWeek\",\n  props: {\n    month: Number,\n    weekStart: Date,\n    minDate: Date,\n    maxDate: Date,\n    selected: Date,\n    dateFilter: Function,\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    squareCells: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      today: new Date()\n    };\n  },\n  computed: {\n    dates: function dates() {\n      return this.buildDays(this.weekStart);\n    },\n    classes: function classes() {\n      return [\"n-calendar-week--color-\".concat(this.color), {\n        \"n-calendar-week--has-square-cells\": this.squareCells\n      }];\n    }\n  },\n  methods: {\n    buildDays: function buildDays(weekStart) {\n      var days = [dateUtils.clone(weekStart)];\n      var day = dateUtils.clone(weekStart);\n\n      for (var i = 1; i <= 6; i++) {\n        day = dateUtils.clone(day);\n        day.setDate(day.getDate() + 1);\n        days.push(day);\n      }\n\n      return days;\n    },\n    getDateClasses: function getDateClasses(date) {\n      return [{\n        \"is-today\": dateUtils.isSameDay(date, this.today)\n      }, {\n        \"is-in-other-month\": this.isDateInOtherMonth(date)\n      }, {\n        \"is-selected\": this.selected && dateUtils.isSameDay(date, this.selected)\n      }, {\n        \"is-disabled\": this.isDateDisabled(date)\n      }];\n    },\n    selectDate: function selectDate(date) {\n      if (this.isDateDisabled(date)) {\n        return;\n      }\n\n      this.$emit(\"date-select\", date);\n    },\n    isDateInOtherMonth: function isDateInOtherMonth(date) {\n      return this.month !== date.getMonth();\n    },\n    isDateDisabled: function isDateDisabled(date) {\n      var isDisabled = this.minDate && dateUtils.isBefore(date, this.minDate) || this.maxDate && dateUtils.isAfter(date, this.maxDate);\n\n      if (isDisabled) {\n        return true;\n      }\n\n      return this.dateFilter ? !this.dateFilter(date) : false;\n    }\n  }\n};",{"version":3,"sources":["NCalendarWeek.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA,OAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,SAAA,EAAA,IAFA;AAGA,IAAA,OAAA,EAAA,IAHA;AAIA,IAAA,OAAA,EAAA,IAJA;AAKA,IAAA,QAAA,EAAA,IALA;AAMA,IAAA,UAAA,EAAA,QANA;AAOA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAPA;AAWA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAXA,GAHA;AAoBA,EAAA,IApBA,kBAoBA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,IAAA,IAAA;AADA,KAAA;AAGA,GAxBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AACA,KAHA;AAKA,IAAA,OALA,qBAKA;AACA,aAAA,kCACA,KAAA,KADA,GAEA;AAAA,6CAAA,KAAA;AAAA,OAFA,CAAA;AAIA;AAVA,GA1BA;AAuCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,SADA,EACA;AACA,UAAA,IAAA,GAAA,CAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,SAAA,CAAA,KAAA,CAAA,SAAA,CAAA;;AAEA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,GAAA,GAAA,SAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,QAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,KAAA,CAAA;AAEA,QAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA;;AAEA,aAAA,IAAA;AACA,KAbA;AAeA,IAAA,cAfA,0BAeA,IAfA,EAeA;AACA,aAAA,CACA;AAAA,oBAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,KAAA,KAAA;AAAA,OADA,EAEA;AAAA,6BAAA,KAAA,kBAAA,CAAA,IAAA;AAAA,OAFA,EAGA;AACA,uBACA,KAAA,QAAA,IAAA,SAAA,CAAA,SAAA,CAAA,IAAA,EAAA,KAAA,QAAA;AAFA,OAHA,EAOA;AAAA,uBAAA,KAAA,cAAA,CAAA,IAAA;AAAA,OAPA,CAAA;AASA,KAzBA;AA2BA,IAAA,UA3BA,sBA2BA,IA3BA,EA2BA;AACA,UAAA,KAAA,cAAA,CAAA,IAAA,CAAA,EAAA;AACA;AACA;;AAEA,WAAA,KAAA,CAAA,aAAA,EAAA,IAAA;AACA,KAjCA;AAmCA,IAAA,kBAnCA,8BAmCA,IAnCA,EAmCA;AACA,aAAA,KAAA,KAAA,KAAA,IAAA,CAAA,QAAA,EAAA;AACA,KArCA;AAuCA,IAAA,cAvCA,0BAuCA,IAvCA,EAuCA;AACA,UAAA,UAAA,GACA,KAAA,OAAA,IAAA,SAAA,CAAA,QAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAAA,IACA,KAAA,OAAA,IAAA,SAAA,CAAA,OAAA,CAAA,IAAA,EAAA,KAAA,OAAA,CAFA;;AAIA,UAAA,UAAA,EAAA;AACA,eAAA,IAAA;AACA;;AAEA,aAAA,KAAA,UAAA,GAAA,CAAA,KAAA,UAAA,CAAA,IAAA,CAAA,GAAA,KAAA;AACA;AAjDA;AAvCA,CAAA","sourcesContent":["<template>\n  <tr class=\"n-calendar-week\" :class=\"classes\">\n    <td v-for=\"date in dates\" :key=\"date.toString()\">\n      <button\n        class=\"n-calendar-week__date\"\n        :class=\"getDateClasses(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        @click=\"selectDate(date)\"\n      >\n        <slot :date=\"date\">{{ date.getDate() }}</slot>\n      </button>\n    </td>\n  </tr>\n</template>\n\n<script>\nimport dateUtils from \"../helpers/date\";\n\nexport default {\n  name: \"NCalendarWeek\",\n\n  props: {\n    month: Number,\n    weekStart: Date,\n    minDate: Date,\n    maxDate: Date,\n    selected: Date,\n    dateFilter: Function,\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    squareCells: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      today: new Date()\n    };\n  },\n\n  computed: {\n    dates() {\n      return this.buildDays(this.weekStart);\n    },\n\n    classes() {\n      return [\n        `n-calendar-week--color-${this.color}`,\n        { \"n-calendar-week--has-square-cells\": this.squareCells }\n      ];\n    }\n  },\n\n  methods: {\n    buildDays(weekStart) {\n      const days = [dateUtils.clone(weekStart)];\n      let day = dateUtils.clone(weekStart);\n\n      for (let i = 1; i <= 6; i++) {\n        day = dateUtils.clone(day);\n        day.setDate(day.getDate() + 1);\n\n        days.push(day);\n      }\n\n      return days;\n    },\n\n    getDateClasses(date) {\n      return [\n        { \"is-today\": dateUtils.isSameDay(date, this.today) },\n        { \"is-in-other-month\": this.isDateInOtherMonth(date) },\n        {\n          \"is-selected\":\n            this.selected && dateUtils.isSameDay(date, this.selected)\n        },\n        { \"is-disabled\": this.isDateDisabled(date) }\n      ];\n    },\n\n    selectDate(date) {\n      if (this.isDateDisabled(date)) {\n        return;\n      }\n\n      this.$emit(\"date-select\", date);\n    },\n\n    isDateInOtherMonth(date) {\n      return this.month !== date.getMonth();\n    },\n\n    isDateDisabled(date) {\n      const isDisabled =\n        (this.minDate && dateUtils.isBefore(date, this.minDate)) ||\n        (this.maxDate && dateUtils.isAfter(date, this.maxDate));\n\n      if (isDisabled) {\n        return true;\n      }\n\n      return this.dateFilter ? !this.dateFilter(date) : false;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/imports.scss\";\n\n.n-calendar-week {\n  font-size: rem(14px);\n  width: 100%;\n\n  td {\n    width: (100% / 7);\n    min-width: $n-calendar-cell-size;\n    position: relative;\n  }\n}\n\n.n-calendar-week--has-square-cells {\n  td {\n    // This makes the <td> square, while keeping it responsive\n    &::before {\n      box-sizing: border-box;\n      content: \"\";\n      display: block;\n      padding-top: 100%;\n      min-height: $n-calendar-cell-size;\n    }\n  }\n\n  .n-calendar-week__date {\n    position: absolute;\n    left: 0;\n    top: 0;\n    height: 100%;\n    border-radius: 50%;\n  }\n}\n\n.n-calendar-week__date {\n  align-items: center;\n  border-radius: 2px;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  outline: none;\n  text-align: center;\n  appearance: none;\n  background-color: transparent;\n  border: none;\n  width: 100%;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: 1;\n  margin: 0;\n  min-height: $n-calendar-cell-size;\n  padding: 0;\n\n  &:hover,\n  body[modality=\"keyboard\"] &:focus {\n    background-color: rgba(black, 0.1);\n  }\n\n  &.is-in-other-month {\n    visibility: hidden;\n  }\n\n  &.is-today {\n    font-weight: bold;\n  }\n\n  &.is-disabled {\n    background-color: transparent;\n    cursor: default;\n    opacity: 0.4;\n  }\n}\n\n// ================================================\n// Colors\n// ================================================\n\n.n-calendar-week--color-primary {\n  .n-calendar-week__date {\n    &.is-today {\n      color: $brand-primary-color;\n\n      &.is-selected {\n        color: white;\n      }\n    }\n\n    &.is-selected,\n    body[modality=\"keyboard\"] &.is-selected {\n      background-color: $brand-primary-color;\n      color: white;\n    }\n  }\n}\n\n.n-calendar-week--color-accent {\n  .n-calendar-week__date {\n    &.is-today {\n      color: $brand-accent-color;\n\n      &.is-selected {\n        color: white;\n      }\n    }\n\n    &.is-selected,\n    body[modality=\"keyboard\"] &.is-selected {\n      background-color: $brand-accent-color;\n      color: white;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}