{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NTable.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NTableHeader from \"./NTableHeader.vue\";\nimport NTableRows from \"./NTableRows.vue\";\nimport NTableRow from \"./NTableRow.vue\";\nimport NTableRowExpand from \"./NTableRowExpand.vue\";\nimport NTableColumnExpand from \"./NTableColumnExpand.vue\";\nimport stickybits from \"stickybits\";\nimport orderBy from \"../helpers/orderBy\"; // import { v4 as uuidv4 } from \"uuid\";\n\nexport default {\n  name: \"NTable\",\n  components: {\n    NTableHeader: NTableHeader,\n    NTableRow: NTableRow,\n    NTableRows: NTableRows,\n    NTableRowExpand: NTableRowExpand,\n    NTableColumnExpand: NTableColumnExpand\n  },\n  props: {\n    /**\n     * Table data\n     */\n    data: {\n      default: function _default() {\n        return [];\n      },\n      type: Array\n    },\n    loading: {\n      default: false,\n      type: Boolean\n    },\n    isExpandable: {\n      default: false,\n      type: Boolean\n    },\n    stickyHeader: {\n      default: false,\n      type: Boolean\n    },\n    stickyHeaderOffset: {\n      default: 0,\n      type: Number\n    },\n    isFiltered: {\n      default: false,\n      type: Boolean\n    },\n    filter: {\n      default: function _default() {\n        return {\n          props: [],\n          value: \"\"\n        };\n      },\n      type: Object\n    },\n\n    /**\n     * Sort by property, optionally specifify the order\n     */\n    sortBy: {\n      default: function _default() {\n        return {\n          prop: \"\",\n          order: \"ascending\"\n        };\n      },\n      type: Object\n    },\n    align: {\n      default: \"left\",\n      type: String\n    },\n    labelAlign: {\n      default: \"left\",\n      type: String\n    },\n\n    /**\n     * Specify empty text\n     */\n    emptyText: {\n      default: \"No Entries\",\n      type: String\n    },\n\n    /**\n     * Specify empty text\n     */\n    notFoundText: {\n      default: \"No Entries Found\",\n      type: String\n    },\n\n    /**\n     * Specify row class. e.g. getRowClass(row, index)\n     */\n    rowClass: {\n      default: null,\n      type: Function\n    },\n\n    /**\n     * Disable sorting. Used whenever back-end does the sorting.\n     */\n    sortDisabled: {\n      default: false,\n      type: Boolean\n    },\n\n    /**\n     * Enable/Disable url Queries. Vue $router has to be included.\n     */\n    urlQueries: {\n      default: false,\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {\n      loaded: false,\n      sortedBy: \"\",\n      sortOrder: \"ascending\",\n      sortMethod: null,\n      expandedRows: [],\n      expandWidth: 50,\n      rowLoaded: 30\n    };\n  },\n  computed: {\n    classes: function classes() {\n      var classes = [];\n      return classes;\n    },\n    rowPadding: function rowPadding() {\n      if (this.data && this.rows) {\n        return (this.data.length - this.rows.length) * 90;\n      }\n\n      return 0;\n    },\n    children: function children() {\n      // #TODO Add protection that just column elements are valid children.\n      if (this.loaded && !this.isEmpty && this.$refs.rows) {\n        return this.$refs.rows.$children;\n      }\n\n      return [];\n    },\n    labels: function labels() {\n      var labels = [];\n\n      if (this.isEmpty) {\n        return labels;\n      }\n\n      var createLabel = function createLabel(column) {\n        return {\n          label: column._props.label,\n          sortable: column._props.sortable,\n          prop: column._props.prop,\n          align: column._props.align,\n          labelAlign: column._props.align,\n          maxWidth: column._props.maxWidth,\n          minWidth: column._props.minWidth,\n          customHeader: column._props.customHeader,\n          sortMethod: column._props.sortMethod,\n          borderRight: column._props.borderRight,\n          isNested: column._props.isNested,\n          nestedWidth: column._props.nestedWidth,\n          // Get nested columns as children\n          labels: column._props.isNested ? getLabels(column) : []\n        };\n      };\n\n      var getLabels = function getLabels(column2) {\n        var labels = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = column2.$children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var column = _step.value;\n\n            if (column.$options._componentTag === \"n-table-column\") {\n              labels.push(createLabel(column));\n            } else if (column.$options._componentTag.includes(\"user-list\")) {\n              labels.push(getLabels(column)[0]);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return labels;\n      };\n\n      if (this.children[0]) {\n        labels = getLabels(this.children[0]);\n      }\n\n      return labels;\n    },\n    rows: function rows() {\n      var data = _toConsumableArray(this.data);\n\n      if (this.sortedBy && !this.sortDisabled) {\n        data = orderBy(this.sortedBy, data, this.sortMethod);\n      }\n\n      if (this.filter.value) {\n        data = this.filterRows(data);\n      } // Add Id for Vue Key.add\n      // if (this.isExpandable) {\n      //   data.forEach(row => (row.key = uuidv4()));\n      // }\n\n\n      if (this.sortOrder === \"descending\" && !this.sortDisabled) {\n        return data.reverse();\n      }\n\n      return data.slice(0, this.rowLoaded);\n    },\n    isEmpty: function isEmpty() {\n      return this.rows.length < 1;\n    },\n    sortQueries: function sortQueries() {\n      return {\n        sortedBy: this.$route.query.sortedBy,\n        sortOrder: this.$route.query.sortOrder\n      };\n    }\n  },\n  watch: {\n    sortQueries: {\n      immediate: false,\n      deep: true,\n      handler: function handler(newSortQueries) {\n        if (this.urlQueries) {\n          this.changeSort(newSortQueries.sortedBy, newSortQueries.sortOrder);\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.loaded = true;\n\n    if (this.stickyHeader) {\n      this.createStickyHeader(0);\n    }\n\n    if (this.sortBy.order) {\n      this.sortOrder = this.sortBy.order;\n    }\n\n    if (this.sortBy.prop) {\n      this.sortedBy = this.sortBy.prop;\n    } // Add sort order to URL\n\n\n    if (this.urlQueries) {\n      if (this.$route.query.sortedBy) {\n        this.changeSort(this.$route.query.sortedBy, this.$route.query.sortOrder);\n      } else {\n        this.$router.push({\n          query: _objectSpread({}, this.$route.query, {\n            sortedBy: this.sortedBy,\n            sortOrder: this.sortOrder\n          })\n        });\n      }\n    }\n  },\n  methods: {\n    filterRows: function filterRows(data) {\n      var _this = this;\n\n      var props = this.filter.props.length < 1 ? Object.keys(data[0]) : this.filter.props;\n      return data.filter(function (data) {\n        return props.some(function (prop) {\n          return data[prop] ? data[prop].toLowerCase().includes(_this.filter.value.toLowerCase()) : false;\n        });\n      });\n    },\n    isRowLoaded: function isRowLoaded(index) {\n      var that = this;\n\n      if (index % 30 == 0) {\n        setTimeout(function () {\n          that.rowLoaded = index + 30;\n        }, 0);\n      }\n    },\n    createStickyHeader: function createStickyHeader() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;\n      var that = this; // Fixed header for the table component\n\n      setTimeout(function () {\n        stickybits(\".n-table-header\", {\n          stickyBitStickyOffset: that.stickyHeaderOffset,\n          useStickyClasses: true\n        });\n      }, timeout);\n    },\n    updateStickyHeader: function updateStickyHeader() {\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      setTimeout(function () {\n        var stickybitsInstancetoBeUpdated = stickybits(\".n-table-header\");\n        console.log(\"stickybitsInstancetoBeUpdated :\", stickybitsInstancetoBeUpdated);\n        stickybitsInstancetoBeUpdated.update();\n      }, timeout);\n    },\n    changeSort: function changeSort(property) {\n      var sortOrder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ascending\";\n      var sortMethod = arguments.length > 2 ? arguments[2] : undefined;\n      var isHeader = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (sortOrder === \"toggle\") {\n        if (this.sortOrder === \"ascending\") {\n          sortOrder = \"descending\";\n        } else {\n          sortOrder = \"ascending\";\n        }\n      }\n\n      if (isHeader) {\n        this.$router.push({\n          query: _objectSpread({}, this.$route.query, {\n            page: 1\n          })\n        });\n      }\n\n      var current = {\n        sortedBy: this.sortedBy,\n        sortOrder: this.sortOrder\n      };\n      var next = {\n        sortedBy: property,\n        sortOrder: sortOrder\n      };\n\n      if (JSON.stringify(next) === JSON.stringify(current)) {\n        console.log(\"returned\");\n        return;\n      } // Add to URL query\n\n\n      if (this.urlQueries) {\n        this.$router.push({\n          query: _objectSpread({}, this.$route.query, {\n            sortedBy: property,\n            sortOrder: sortOrder\n          })\n        });\n      }\n\n      this.sortedBy = property;\n      this.sortOrder = sortOrder;\n\n      if (sortMethod) {\n        this.sortMethod = sortMethod;\n      } else {\n        this.sortMethod = false;\n      }\n\n      this.$emit(\"sort\", {\n        sortedBy: this.sortedBy,\n        sortOrder: this.sortOrder\n      });\n    },\n    getRowClasses: function getRowClasses(row, index) {\n      var classes = [];\n\n      if (this.rowClass) {\n        classes = this.rowClass(row, index).split(\" \");\n      }\n\n      if (this.expandedRows.includes(index.toString())) {\n        classes.push(\"is-expanded\");\n      }\n\n      return classes.join(\" \");\n    },\n    toggleExpand: function toggleExpand(key) {\n      var close = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var expandedRows = _toConsumableArray(this.expandedRows);\n\n      if (expandedRows.includes(key) || close) {\n        this.expandedRows = expandedRows.filter(function (row) {\n          return row !== key;\n        });\n        this.$emit(\"expand\", \"closed\", key);\n      } else {\n        this.expandedRows.push(key);\n        this.$emit(\"expand\", \"expanded\", key);\n      }\n    }\n  }\n};",{"version":3,"sources":["NTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,OAAA,YAAA;AACA,OAAA,UAAA;AACA,OAAA,SAAA;AACA,OAAA,eAAA;AACA,OAAA,kBAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,OAAA,2B,CACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,QADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA,IAAA,SAAA,EAAA,SAFA;AAGA,IAAA,UAAA,EAAA,UAHA;AAIA,IAAA,eAAA,EAAA,eAJA;AAKA,IAAA,kBAAA,EAAA;AALA,GAFA;AASA,EAAA,KAAA,EAAA;AACA;;;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA,EAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAJA;AAUA,IAAA,OAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAVA;AAcA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAdA;AAkBA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAlBA;AAsBA,IAAA,kBAAA,EAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAtBA;AA0BA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA1BA;AA+BA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA;AAAA,UAAA,KAAA,EAAA,EAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KA/BA;;AAqCA;;;AAGA,IAAA,MAAA,EAAA;AACA,MAAA,OAAA,EAAA,oBAAA;AACA,eAAA;AAAA,UAAA,IAAA,EAAA,EAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA,OAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAxCA;AA8CA,IAAA,KAAA,EAAA;AACA,MAAA,OAAA,EAAA,MADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA9CA;AAkDA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA,MADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAlDA;;AAsDA;;;AAGA,IAAA,SAAA,EAAA;AACA,MAAA,OAAA,EAAA,YADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAzDA;;AA6DA;;;AAGA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,EAAA,kBADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAhEA;;AAoEA;;;AAGA,IAAA,QAAA,EAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAvEA;;AA2EA;;;AAGA,IAAA,YAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA,KA9EA;;AAkFA;;;AAGA,IAAA,UAAA,EAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA;AAFA;AArFA,GATA;AAmGA,EAAA,IAnGA,kBAmGA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,WAHA;AAIA,MAAA,UAAA,EAAA,IAJA;AAKA,MAAA,YAAA,EAAA,EALA;AAMA,MAAA,WAAA,EAAA,EANA;AAOA,MAAA,SAAA,EAAA;AAPA,KAAA;AASA,GA7GA;AA8GA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,UAAA,OAAA,GAAA,EAAA;AACA,aAAA,OAAA;AACA,KAJA;AAKA,IAAA,UALA,wBAKA;AACA,UAAA,KAAA,IAAA,IAAA,KAAA,IAAA,EAAA;AACA,eAAA,CAAA,KAAA,IAAA,CAAA,MAAA,GAAA,KAAA,IAAA,CAAA,MAAA,IAAA,EAAA;AACA;;AACA,aAAA,CAAA;AACA,KAVA;AAWA,IAAA,QAXA,sBAWA;AACA;AACA,UAAA,KAAA,MAAA,IAAA,CAAA,KAAA,OAAA,IAAA,KAAA,KAAA,CAAA,IAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,IAAA,CAAA,SAAA;AACA;;AACA,aAAA,EAAA;AACA,KAjBA;AAkBA,IAAA,MAlBA,oBAkBA;AACA,UAAA,MAAA,GAAA,EAAA;;AAEA,UAAA,KAAA,OAAA,EAAA;AACA,eAAA,MAAA;AACA;;AAEA,UAAA,WAAA,GAAA,SAAA,WAAA,CAAA,MAAA,EAAA;AACA,eAAA;AACA,UAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KADA;AAEA,UAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,QAFA;AAGA,UAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,IAHA;AAIA,UAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAJA;AAKA,UAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KALA;AAMA,UAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,QANA;AAOA,UAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,QAPA;AAQA,UAAA,YAAA,EAAA,MAAA,CAAA,MAAA,CAAA,YARA;AASA,UAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,UATA;AAUA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,WAVA;AAWA,UAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,QAXA;AAYA,UAAA,WAAA,EAAA,MAAA,CAAA,MAAA,CAAA,WAZA;AAaA;AACA,UAAA,MAAA,EAAA,MAAA,CAAA,MAAA,CAAA,QAAA,GAAA,SAAA,CAAA,MAAA,CAAA,GAAA;AAdA,SAAA;AAgBA,OAjBA;;AAmBA,UAAA,SAAA,GAAA,SAAA,SAAA,CAAA,OAAA,EAAA;AACA,YAAA,MAAA,GAAA,EAAA;AADA;AAAA;AAAA;;AAAA;AAGA,+BAAA,OAAA,CAAA,SAAA,8HAAA;AAAA,gBAAA,MAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,aAAA,KAAA,gBAAA,EAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA;AACA,aAFA,MAEA,IAAA,MAAA,CAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA,WAAA,CAAA,EAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAA,MAAA;AACA,OAZA;;AAcA,UAAA,KAAA,QAAA,CAAA,CAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,SAAA,CAAA,KAAA,QAAA,CAAA,CAAA,CAAA,CAAA;AACA;;AAEA,aAAA,MAAA;AACA,KA/DA;AAgEA,IAAA,IAhEA,kBAgEA;AACA,UAAA,IAAA,sBAAA,KAAA,IAAA,CAAA;;AAEA,UAAA,KAAA,QAAA,IAAA,CAAA,KAAA,YAAA,EAAA;AACA,QAAA,IAAA,GAAA,OAAA,CAAA,KAAA,QAAA,EAAA,IAAA,EAAA,KAAA,UAAA,CAAA;AACA;;AAEA,UAAA,KAAA,MAAA,CAAA,KAAA,EAAA;AACA,QAAA,IAAA,GAAA,KAAA,UAAA,CAAA,IAAA,CAAA;AACA,OATA,CAWA;AACA;AACA;AACA;;;AAEA,UAAA,KAAA,SAAA,KAAA,YAAA,IAAA,CAAA,KAAA,YAAA,EAAA;AACA,eAAA,IAAA,CAAA,OAAA,EAAA;AACA;;AAEA,aAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,KAAA,SAAA,CAAA;AACA,KArFA;AAsFA,IAAA,OAtFA,qBAsFA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAxFA;AAyFA,IAAA,WAzFA,yBAyFA;AACA,aAAA;AACA,QAAA,QAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QADA;AAEA,QAAA,SAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AAFA,OAAA;AAIA;AA9FA,GA9GA;AA+MA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,OAHA,mBAGA,cAHA,EAGA;AACA,YAAA,KAAA,UAAA,EAAA;AACA,eAAA,UAAA,CAAA,cAAA,CAAA,QAAA,EAAA,cAAA,CAAA,SAAA;AACA;AACA;AAPA;AADA,GA/MA;AA2NA,EAAA,OA3NA,qBA2NA;AACA,SAAA,MAAA,GAAA,IAAA;;AACA,QAAA,KAAA,YAAA,EAAA;AACA,WAAA,kBAAA,CAAA,CAAA;AACA;;AAEA,QAAA,KAAA,MAAA,CAAA,KAAA,EAAA;AACA,WAAA,SAAA,GAAA,KAAA,MAAA,CAAA,KAAA;AACA;;AAEA,QAAA,KAAA,MAAA,CAAA,IAAA,EAAA;AACA,WAAA,QAAA,GAAA,KAAA,MAAA,CAAA,IAAA;AACA,KAZA,CAcA;;;AACA,QAAA,KAAA,UAAA,EAAA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,EAAA;AACA,aAAA,UAAA,CACA,KAAA,MAAA,CAAA,KAAA,CAAA,QADA,EAEA,KAAA,MAAA,CAAA,KAAA,CAAA,SAFA;AAIA,OALA,MAKA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,KAAA,oBACA,KAAA,MAAA,CAAA,KADA;AAEA,YAAA,QAAA,EAAA,KAAA,QAFA;AAGA,YAAA,SAAA,EAAA,KAAA;AAHA;AADA,SAAA;AAOA;AACA;AACA,GA1PA;AA4PA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AAAA;;AACA,UAAA,KAAA,GACA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,GAAA,KAAA,MAAA,CAAA,KADA;AAGA,aAAA,IAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eACA,KAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,iBACA,IAAA,CAAA,IAAA,CAAA,GACA,IAAA,CAAA,IAAA,CAAA,CAAA,WAAA,GAAA,QAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,WAAA,EAAA,CADA,GAEA,KAHA;AAAA,SAAA,CADA;AAAA,OAAA,CAAA;AAOA,KAZA;AAaA,IAAA,WAbA,uBAaA,KAbA,EAaA;AACA,UAAA,IAAA,GAAA,IAAA;;AAEA,UAAA,KAAA,GAAA,EAAA,IAAA,CAAA,EAAA;AACA,QAAA,UAAA,CAAA,YAAA;AACA,UAAA,IAAA,CAAA,SAAA,GAAA,KAAA,GAAA,EAAA;AACA,SAFA,EAEA,CAFA,CAAA;AAGA;AACA,KArBA;AAuBA,IAAA,kBAvBA,gCAuBA;AAAA,UAAA,OAAA,uEAAA,GAAA;AACA,UAAA,IAAA,GAAA,IAAA,CADA,CAEA;;AACA,MAAA,UAAA,CAAA,YAAA;AACA,QAAA,UAAA,CAAA,iBAAA,EAAA;AACA,UAAA,qBAAA,EAAA,IAAA,CAAA,kBADA;AAEA,UAAA,gBAAA,EAAA;AAFA,SAAA,CAAA;AAIA,OALA,EAKA,OALA,CAAA;AAMA,KAhCA;AAiCA,IAAA,kBAjCA,gCAiCA;AAAA,UAAA,OAAA,uEAAA,CAAA;AACA,MAAA,UAAA,CAAA,YAAA;AACA,YAAA,6BAAA,GAAA,UAAA,CAAA,iBAAA,CAAA;AACA,QAAA,OAAA,CAAA,GAAA,CACA,iCADA,EAEA,6BAFA;AAIA,QAAA,6BAAA,CAAA,MAAA;AACA,OAPA,EAOA,OAPA,CAAA;AAQA,KA1CA;AA2CA,IAAA,UA3CA,sBA4CA,QA5CA,EAgDA;AAAA,UAHA,SAGA,uEAHA,WAGA;AAAA,UAFA,UAEA;AAAA,UADA,QACA,uEADA,KACA;;AACA,UAAA,SAAA,KAAA,QAAA,EAAA;AACA,YAAA,KAAA,SAAA,KAAA,WAAA,EAAA;AACA,UAAA,SAAA,GAAA,YAAA;AACA,SAFA,MAEA;AACA,UAAA,SAAA,GAAA,WAAA;AACA;AACA;;AAEA,UAAA,QAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,KAAA,oBACA,KAAA,MAAA,CAAA,KADA;AAEA,YAAA,IAAA,EAAA;AAFA;AADA,SAAA;AAMA;;AAEA,UAAA,OAAA,GAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,SAAA,EAAA,KAAA;AAFA,OAAA;AAIA,UAAA,IAAA,GAAA;AACA,QAAA,QAAA,EAAA,QADA;AAEA,QAAA,SAAA,EAAA;AAFA,OAAA;;AAKA,UAAA,IAAA,CAAA,SAAA,CAAA,IAAA,MAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA;AACA,OA9BA,CAgCA;;;AACA,UAAA,KAAA,UAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,KAAA,oBACA,KAAA,MAAA,CAAA,KADA;AAEA,YAAA,QAAA,EAAA,QAFA;AAGA,YAAA,SAAA,EAAA;AAHA;AADA,SAAA;AAOA;;AAEA,WAAA,QAAA,GAAA,QAAA;AACA,WAAA,SAAA,GAAA,SAAA;;AAEA,UAAA,UAAA,EAAA;AACA,aAAA,UAAA,GAAA,UAAA;AACA,OAFA,MAEA;AACA,aAAA,UAAA,GAAA,KAAA;AACA;;AAEA,WAAA,KAAA,CAAA,MAAA,EAAA;AACA,QAAA,QAAA,EAAA,KAAA,QADA;AAEA,QAAA,SAAA,EAAA,KAAA;AAFA,OAAA;AAIA,KAxGA;AAyGA,IAAA,aAzGA,yBAyGA,GAzGA,EAyGA,KAzGA,EAyGA;AACA,UAAA,OAAA,GAAA,EAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,QAAA,OAAA,GAAA,KAAA,QAAA,CAAA,GAAA,EAAA,KAAA,EAAA,KAAA,CAAA,GAAA,CAAA;AACA;;AAEA,UAAA,KAAA,YAAA,CAAA,QAAA,CAAA,KAAA,CAAA,QAAA,EAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA;;AAEA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,KApHA;AAqHA,IAAA,YArHA,wBAqHA,GArHA,EAqHA;AAAA,UAAA,KAAA,uEAAA,KAAA;;AACA,UAAA,YAAA,sBAAA,KAAA,YAAA,CAAA;;AACA,UAAA,YAAA,CAAA,QAAA,CAAA,GAAA,KAAA,KAAA,EAAA;AACA,aAAA,YAAA,GAAA,YAAA,CAAA,MAAA,CAAA,UAAA,GAAA;AAAA,iBAAA,GAAA,KAAA,GAAA;AAAA,SAAA,CAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,GAAA;AACA,OAHA,MAGA;AACA,aAAA,YAAA,CAAA,IAAA,CAAA,GAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,UAAA,EAAA,GAAA;AACA;AACA;AA9HA;AA5PA,CAAA","sourcesContent":["<template>\n  <div\n    ref=\"n-table\"\n    class=\"n-table\"\n    :class=\"classes\"\n    v-bind=\"$attrs\"\n    :style=\"isEmpty ? null : { 'padding-bottom': rowPadding + 'px' }\"\n    v-on=\"$listeners\"\n  >\n    <n-table-header\n      v-if=\"loaded && labels.length > 0\"\n      :labels=\"labels\"\n      :sort-order=\"sortOrder\"\n      :sorted-by=\"sortedBy\"\n      :is-expandable=\"isExpandable\"\n      :expand-width=\"expandWidth\"\n      :slots=\"$slots\"\n      @changeSort=\"changeSort\"\n    />\n\n    <n-table-rows ref=\"rows\">\n      <div v-if=\"isEmpty\" class=\"n-table-empty\">\n        <span v-if=\"!loading && !isFiltezred && filter.value.length === 0\">\n          {{ emptyText }}\n        </span>\n        <span v-else-if=\"!loading\">{{ notFoundText }}</span>\n        <span v-else>Loading...</span>\n      </div>\n\n      <n-table-row v-if=\"isEmpty\" v-show=\"false\" :is-empty=\"isEmpty\">\n        <slot :row=\"{}\"></slot>\n      </n-table-row>\n\n      <n-table-row\n        v-for=\"(row, index) in rows\"\n        :key=\"index.toString()\"\n        :class=\"getRowClasses(row, index)\"\n        @click.native=\"$emit('row-click', row, index, $event)\"\n        @mounted=\"isRowLoaded(index + 1)\"\n      >\n        <n-table-column-expand\n          v-if=\"isExpandable\"\n          :id=\"index.toString()\"\n          ref=\"expand\"\n          :expanded-rows=\"expandedRows\"\n          :expand-width=\"expandWidth\"\n          @expand=\"toggleExpand(index.toString())\"\n        />\n\n        <slot :row=\"row\" :index=\"index\" />\n\n        <n-table-row-expand\n          v-if=\"isExpandable\"\n          :id=\"index.toString()\"\n          :expand-width=\"expandWidth\"\n          :expanded-rows=\"expandedRows\"\n        >\n          <slot :row=\"row\" name=\"expanded\" />\n        </n-table-row-expand>\n      </n-table-row>\n    </n-table-rows>\n  </div>\n</template>\n<script>\nimport NTableHeader from \"./NTableHeader.vue\";\nimport NTableRows from \"./NTableRows.vue\";\nimport NTableRow from \"./NTableRow.vue\";\nimport NTableRowExpand from \"./NTableRowExpand.vue\";\nimport NTableColumnExpand from \"./NTableColumnExpand.vue\";\nimport stickybits from \"stickybits\";\nimport orderBy from \"../helpers/orderBy\";\n// import { v4 as uuidv4 } from \"uuid\";\n\nexport default {\n  name: \"NTable\",\n  components: {\n    NTableHeader,\n    NTableRow,\n    NTableRows,\n    NTableRowExpand,\n    NTableColumnExpand\n  },\n  props: {\n    /**\n     * Table data\n     */\n    data: {\n      default: function() {\n        return [];\n      },\n      type: Array\n    },\n    loading: {\n      default: false,\n      type: Boolean\n    },\n    isExpandable: {\n      default: false,\n      type: Boolean\n    },\n    stickyHeader: {\n      default: false,\n      type: Boolean\n    },\n    stickyHeaderOffset: {\n      default: 0,\n      type: Number\n    },\n    isFiltered: {\n      default: false,\n      type: Boolean\n    },\n\n    filter: {\n      default: () => {\n        return { props: [], value: \"\" };\n      },\n      type: Object\n    },\n    /**\n     * Sort by property, optionally specifify the order\n     */\n    sortBy: {\n      default: () => {\n        return { prop: \"\", order: \"ascending\" };\n      },\n      type: Object\n    },\n    align: {\n      default: \"left\",\n      type: String\n    },\n    labelAlign: {\n      default: \"left\",\n      type: String\n    },\n    /**\n     * Specify empty text\n     */\n    emptyText: {\n      default: \"No Entries\",\n      type: String\n    },\n    /**\n     * Specify empty text\n     */\n    notFoundText: {\n      default: \"No Entries Found\",\n      type: String\n    },\n    /**\n     * Specify row class. e.g. getRowClass(row, index)\n     */\n    rowClass: {\n      default: null,\n      type: Function\n    },\n    /**\n     * Disable sorting. Used whenever back-end does the sorting.\n     */\n    sortDisabled: {\n      default: false,\n      type: Boolean\n    },\n    /**\n     * Enable/Disable url Queries. Vue $router has to be included.\n     */\n    urlQueries: {\n      default: false,\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      loaded: false,\n      sortedBy: \"\",\n      sortOrder: \"ascending\",\n      sortMethod: null,\n      expandedRows: [],\n      expandWidth: 50,\n      rowLoaded: 30\n    };\n  },\n  computed: {\n    classes() {\n      const classes = [];\n      return classes;\n    },\n    rowPadding() {\n      if (this.data && this.rows) {\n        return (this.data.length - this.rows.length) * 90;\n      }\n      return 0;\n    },\n    children() {\n      // #TODO Add protection that just column elements are valid children.\n      if (this.loaded && !this.isEmpty && this.$refs.rows) {\n        return this.$refs.rows.$children;\n      }\n      return [];\n    },\n    labels() {\n      let labels = [];\n\n      if (this.isEmpty) {\n        return labels;\n      }\n\n      const createLabel = column => {\n        return {\n          label: column._props.label,\n          sortable: column._props.sortable,\n          prop: column._props.prop,\n          align: column._props.align,\n          labelAlign: column._props.align,\n          maxWidth: column._props.maxWidth,\n          minWidth: column._props.minWidth,\n          customHeader: column._props.customHeader,\n          sortMethod: column._props.sortMethod,\n          borderRight: column._props.borderRight,\n          isNested: column._props.isNested,\n          nestedWidth: column._props.nestedWidth,\n          // Get nested columns as children\n          labels: column._props.isNested ? getLabels(column) : []\n        };\n      };\n\n      const getLabels = column2 => {\n        let labels = [];\n\n        for (const column of column2.$children) {\n          if (column.$options._componentTag === \"n-table-column\") {\n            labels.push(createLabel(column));\n          } else if (column.$options._componentTag.includes(\"user-list\")) {\n            labels.push(getLabels(column)[0]);\n          }\n        }\n\n        return labels;\n      };\n\n      if (this.children[0]) {\n        labels = getLabels(this.children[0]);\n      }\n\n      return labels;\n    },\n    rows() {\n      let data = [...this.data];\n\n      if (this.sortedBy && !this.sortDisabled) {\n        data = orderBy(this.sortedBy, data, this.sortMethod);\n      }\n\n      if (this.filter.value) {\n        data = this.filterRows(data);\n      }\n\n      // Add Id for Vue Key.add\n      // if (this.isExpandable) {\n      //   data.forEach(row => (row.key = uuidv4()));\n      // }\n\n      if (this.sortOrder === \"descending\" && !this.sortDisabled) {\n        return data.reverse();\n      }\n\n      return data.slice(0, this.rowLoaded);\n    },\n    isEmpty() {\n      return this.rows.length < 1;\n    },\n    sortQueries() {\n      return {\n        sortedBy: this.$route.query.sortedBy,\n        sortOrder: this.$route.query.sortOrder\n      };\n    }\n  },\n\n  watch: {\n    sortQueries: {\n      immediate: false,\n      deep: true,\n      handler(newSortQueries) {\n        if (this.urlQueries) {\n          this.changeSort(newSortQueries.sortedBy, newSortQueries.sortOrder);\n        }\n      }\n    }\n  },\n\n  mounted() {\n    this.loaded = true;\n    if (this.stickyHeader) {\n      this.createStickyHeader(0);\n    }\n\n    if (this.sortBy.order) {\n      this.sortOrder = this.sortBy.order;\n    }\n\n    if (this.sortBy.prop) {\n      this.sortedBy = this.sortBy.prop;\n    }\n\n    // Add sort order to URL\n    if (this.urlQueries) {\n      if (this.$route.query.sortedBy) {\n        this.changeSort(\n          this.$route.query.sortedBy,\n          this.$route.query.sortOrder\n        );\n      } else {\n        this.$router.push({\n          query: {\n            ...this.$route.query,\n            sortedBy: this.sortedBy,\n            sortOrder: this.sortOrder\n          }\n        });\n      }\n    }\n  },\n\n  methods: {\n    filterRows(data) {\n      const props =\n        this.filter.props.length < 1 ? Object.keys(data[0]) : this.filter.props;\n\n      return data.filter(data =>\n        props.some(prop =>\n          data[prop]\n            ? data[prop].toLowerCase().includes(this.filter.value.toLowerCase())\n            : false\n        )\n      );\n    },\n    isRowLoaded(index) {\n      const that = this;\n\n      if (index % 30 == 0) {\n        setTimeout(function() {\n          that.rowLoaded = index + 30;\n        }, 0);\n      }\n    },\n\n    createStickyHeader(timeout = 100) {\n      const that = this;\n      // Fixed header for the table component\n      setTimeout(() => {\n        stickybits(\".n-table-header\", {\n          stickyBitStickyOffset: that.stickyHeaderOffset,\n          useStickyClasses: true\n        });\n      }, timeout);\n    },\n    updateStickyHeader(timeout = 0) {\n      setTimeout(function() {\n        const stickybitsInstancetoBeUpdated = stickybits(\".n-table-header\");\n        console.log(\n          \"stickybitsInstancetoBeUpdated :\",\n          stickybitsInstancetoBeUpdated\n        );\n        stickybitsInstancetoBeUpdated.update();\n      }, timeout);\n    },\n    changeSort(\n      property,\n      sortOrder = \"ascending\",\n      sortMethod,\n      isHeader = false\n    ) {\n      if (sortOrder === \"toggle\") {\n        if (this.sortOrder === \"ascending\") {\n          sortOrder = \"descending\";\n        } else {\n          sortOrder = \"ascending\";\n        }\n      }\n\n      if (isHeader) {\n        this.$router.push({\n          query: {\n            ...this.$route.query,\n            page: 1\n          }\n        });\n      }\n\n      let current = {\n        sortedBy: this.sortedBy,\n        sortOrder: this.sortOrder\n      };\n      let next = {\n        sortedBy: property,\n        sortOrder: sortOrder\n      };\n\n      if (JSON.stringify(next) === JSON.stringify(current)) {\n        console.log(\"returned\");\n        return;\n      }\n\n      // Add to URL query\n      if (this.urlQueries) {\n        this.$router.push({\n          query: {\n            ...this.$route.query,\n            sortedBy: property,\n            sortOrder: sortOrder\n          }\n        });\n      }\n\n      this.sortedBy = property;\n      this.sortOrder = sortOrder;\n\n      if (sortMethod) {\n        this.sortMethod = sortMethod;\n      } else {\n        this.sortMethod = false;\n      }\n\n      this.$emit(\"sort\", {\n        sortedBy: this.sortedBy,\n        sortOrder: this.sortOrder\n      });\n    },\n    getRowClasses(row, index) {\n      let classes = [];\n      if (this.rowClass) {\n        classes = this.rowClass(row, index).split(\" \");\n      }\n\n      if (this.expandedRows.includes(index.toString())) {\n        classes.push(\"is-expanded\");\n      }\n\n      return classes.join(\" \");\n    },\n    toggleExpand(key, close = false) {\n      const expandedRows = [...this.expandedRows];\n      if (expandedRows.includes(key) || close) {\n        this.expandedRows = expandedRows.filter(row => row !== key);\n        this.$emit(\"expand\", \"closed\", key);\n      } else {\n        this.expandedRows.push(key);\n        this.$emit(\"expand\", \"expanded\", key);\n      }\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n@import \"@/assets/sass/animations.scss\";\n@import \"@/assets/sass/colors.scss\";\n@import \"@/assets/sass/config.scss\";\n\n.active {\n  color: green;\n}\n\n.n-table-empty {\n  text-align: center;\n  width: 100%;\n  padding: 2rem 0;\n  font-size: 1.3rem;\n}\n\n.n-table-row {\n  border-bottom: 1px solid #ebeef5;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 1rem;\n  transition: background-color 0.25s ease;\n\n  &:hover {\n    background: #e9fdfe;\n  }\n  &.is-expanded {\n    &:hover {\n      background: unset;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}