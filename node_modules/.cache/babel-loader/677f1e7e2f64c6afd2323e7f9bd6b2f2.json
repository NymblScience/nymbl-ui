{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/eslint-loader/index.js??ref--13-0!/home/runner/work/nymbl-ui/nymbl-ui/src/helpers/date.js","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/helpers/date.js","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nexport var defaultLang = {\n  months: {\n    full: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  },\n  days: {\n    full: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    initials: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\n  }\n};\n\nfunction pad(value, length) {\n  while (value.length < length) {\n    value = \"0\" + value;\n  }\n\n  return value;\n}\n\nexport function getDayFull(date) {\n  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLang;\n  return lang.days.full[date.getDay()];\n}\nexport function getDayInitial(date) {\n  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLang;\n  return lang.days.initials[date.getDay()];\n}\nexport function getDayAbbreviated(date) {\n  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLang;\n  return lang.days.abbreviated[date.getDay()];\n}\nexport function getMonthFull(date) {\n  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLang;\n  return lang.months.full[date.getMonth()];\n}\nexport function getMonthAbbreviated(date) {\n  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultLang;\n  return lang.months.abbreviated[date.getMonth()];\n}\nexport function getDayOfMonth(date) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    pad: true\n  };\n  var day = date.getDate().toString();\n  return options.pad ? pad(day) : day;\n}\nexport function humanize(date) {\n  if (date == null) {\n    return \"\";\n  }\n\n  var dateObj = new Date(date);\n  return dateObj.toLocaleDateString().toString();\n}\nexport function clone(date) {\n  return new Date(date.getTime());\n}\nexport function moveToDayOfWeek(date, dayOfWeek) {\n  while (date.getDay() !== dayOfWeek) {\n    date.setDate(date.getDate() - 1);\n  }\n\n  return date;\n}\nexport function isSameDay(date1, date2) {\n  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n}\nexport function isBefore(date1, date2) {\n  return date1.getTime() < date2.getTime();\n}\nexport function isAfter(date1, date2) {\n  return date1.getTime() > date2.getTime();\n}\nexport default {\n  defaultLang: defaultLang,\n  getDayFull: getDayFull,\n  getDayInitial: getDayInitial,\n  getDayAbbreviated: getDayAbbreviated,\n  getMonthFull: getMonthFull,\n  getMonthAbbreviated: getMonthAbbreviated,\n  getDayOfMonth: getDayOfMonth,\n  humanize: humanize,\n  clone: clone,\n  moveToDayOfWeek: moveToDayOfWeek,\n  isSameDay: isSameDay,\n  isBefore: isBefore,\n  isAfter: isAfter\n};",{"version":3,"sources":["/home/runner/work/nymbl-ui/nymbl-ui/src/helpers/date.js"],"names":["defaultLang","months","full","abbreviated","days","initials","pad","value","length","getDayFull","date","lang","getDay","getDayInitial","getDayAbbreviated","getMonthFull","getMonth","getMonthAbbreviated","getDayOfMonth","options","day","getDate","toString","humanize","dateObj","Date","toLocaleDateString","clone","getTime","moveToDayOfWeek","dayOfWeek","setDate","isSameDay","date1","date2","getFullYear","isBefore","isAfter"],"mappings":"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","sourcesContent":["export const defaultLang = {\n  months: {\n    full: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n\n    abbreviated: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n\n  days: {\n    full: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n\n    abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\n    initials: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]\n  }\n};\n\nfunction pad(value, length) {\n  while (value.length < length) {\n    value = \"0\" + value;\n  }\n\n  return value;\n}\n\nexport function getDayFull(date, lang = defaultLang) {\n  return lang.days.full[date.getDay()];\n}\n\nexport function getDayInitial(date, lang = defaultLang) {\n  return lang.days.initials[date.getDay()];\n}\n\nexport function getDayAbbreviated(date, lang = defaultLang) {\n  return lang.days.abbreviated[date.getDay()];\n}\n\nexport function getMonthFull(date, lang = defaultLang) {\n  return lang.months.full[date.getMonth()];\n}\n\nexport function getMonthAbbreviated(date, lang = defaultLang) {\n  return lang.months.abbreviated[date.getMonth()];\n}\n\nexport function getDayOfMonth(date, options = { pad: true }) {\n  const day = date.getDate().toString();\n  return options.pad ? pad(day) : day;\n}\n\nexport function humanize(date) {\n  if (date == null) {\n    return \"\";\n  }\n  const dateObj = new Date(date);\n  return dateObj.toLocaleDateString().toString();\n}\n\nexport function clone(date) {\n  return new Date(date.getTime());\n}\n\nexport function moveToDayOfWeek(date, dayOfWeek) {\n  while (date.getDay() !== dayOfWeek) {\n    date.setDate(date.getDate() - 1);\n  }\n\n  return date;\n}\n\nexport function isSameDay(date1, date2) {\n  return (\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth() &&\n    date1.getDate() === date2.getDate()\n  );\n}\n\nexport function isBefore(date1, date2) {\n  return date1.getTime() < date2.getTime();\n}\n\nexport function isAfter(date1, date2) {\n  return date1.getTime() > date2.getTime();\n}\n\nexport default {\n  defaultLang,\n  getDayFull,\n  getDayInitial,\n  getDayAbbreviated,\n  getMonthFull,\n  getMonthAbbreviated,\n  getDayOfMonth,\n  humanize,\n  clone,\n  moveToDayOfWeek,\n  isSameDay,\n  isBefore,\n  isAfter\n};\n"]}]}