{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NFocusContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NFocusContainer.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"NFocusContainer\",\n  props: {\n    containFocus: {\n      type: Boolean,\n      default: true\n    },\n    focusRedirector: Function,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    lazy: {\n      type: Boolean,\n      defualt: false // When true, the focus redirectors are not rendered until containFocus is true\n\n    }\n  },\n  computed: {\n    renderRedirector: function renderRedirector() {\n      if (this.disabled) {\n        return false;\n      }\n\n      return this.lazy ? this.containFocus : true;\n    }\n  },\n  methods: {\n    focus: function focus() {\n      this.$refs.content.focus();\n    },\n    redirectFocus: function redirectFocus(e, options) {\n      if (!this.containFocus) {\n        this.$emit(\"focus-overflow\", e, options);\n        return;\n      }\n\n      e.stopPropagation();\n\n      if (this.focusRedirector) {\n        this.focusRedirector(e, options);\n        return;\n      }\n\n      if (options.isTabbingForward) {\n        this.$refs.content.focus();\n      } else {\n        this.$refs.lastFocusable.focus();\n      }\n    }\n  }\n};",{"version":3,"sources":["NFocusContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,eAAA,EAAA,QALA;AAMA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KANA;AAUA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAVA;AAcA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA,CAEA;;AAFA;AAdA,GAHA;AAuBA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA;AACA;;AAEA,aAAA,KAAA,IAAA,GAAA,KAAA,YAAA,GAAA,IAAA;AACA;AAPA,GAvBA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,KAAA;AACA,KAHA;AAKA,IAAA,aALA,yBAKA,CALA,EAKA,OALA,EAKA;AACA,UAAA,CAAA,KAAA,YAAA,EAAA;AACA,aAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,OAAA;AACA;AACA;;AAEA,MAAA,CAAA,CAAA,eAAA;;AAEA,UAAA,KAAA,eAAA,EAAA;AACA,aAAA,eAAA,CAAA,CAAA,EAAA,OAAA;AACA;AACA;;AAEA,UAAA,OAAA,CAAA,gBAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,aAAA,CAAA,KAAA;AACA;AACA;AAvBA;AAjCA,CAAA","sourcesContent":["<template>\n  <component :is=\"tag\" class=\"n-focus-container\">\n    <span\n      v-if=\"renderRedirector\"\n      class=\"n-focus-container__focus-redirector\"\n      tabindex=\"0\"\n      @focus=\"redirectFocus($event, { isTabbingForward: false })\"\n    ></span>\n\n    <div ref=\"content\" class=\"n-focus-container__content\" tabindex=\"-1\">\n      <slot></slot>\n    </div>\n\n    <span\n      v-if=\"!disabled && containFocus\"\n      ref=\"lastFocusable\"\n      class=\"n-focus-container__last-focusable\"\n      tabindex=\"-1\"\n    ></span>\n\n    <span\n      v-if=\"renderRedirector\"\n      class=\"n-focus-container__focus-redirector\"\n      tabindex=\"0\"\n      @focus=\"redirectFocus($event, { isTabbingForward: true })\"\n    ></span>\n  </component>\n</template>\n\n<script>\nexport default {\n  name: \"NFocusContainer\",\n\n  props: {\n    containFocus: {\n      type: Boolean,\n      default: true\n    },\n    focusRedirector: Function,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    lazy: {\n      type: Boolean,\n      defualt: false // When true, the focus redirectors are not rendered until containFocus is true\n    }\n  },\n\n  computed: {\n    renderRedirector() {\n      if (this.disabled) {\n        return false;\n      }\n\n      return this.lazy ? this.containFocus : true;\n    }\n  },\n\n  methods: {\n    focus() {\n      this.$refs.content.focus();\n    },\n\n    redirectFocus(e, options) {\n      if (!this.containFocus) {\n        this.$emit(\"focus-overflow\", e, options);\n        return;\n      }\n\n      e.stopPropagation();\n\n      if (this.focusRedirector) {\n        this.focusRedirector(e, options);\n        return;\n      }\n\n      if (options.isTabbingForward) {\n        this.$refs.content.focus();\n      } else {\n        this.$refs.lastFocusable.focus();\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.n-focus-container__focus-redirector,\n.n-focus-container__last-focusable {\n  opacity: 0;\n  position: absolute;\n}\n\n.n-focus-container__content {\n  outline: none;\n}\n</style>\n"],"sourceRoot":"src/components"}]}