{"remainingRequest":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/nymbl-ui/nymbl-ui/src/components/NConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/nymbl-ui/nymbl-ui/src/components/NConfirm.vue","mtime":1585661990411},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/nymbl-ui/nymbl-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport NButton from \"./NButton.vue\";\nimport NModal from \"./NModal.vue\";\nimport classlist from \"../helpers/classlist\";\nexport default {\n  name: \"NConfirm\",\n  components: {\n    NButton: NButton,\n    NModal: NModal\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"NConfirm\"\n    },\n    type: {\n      type: String,\n      default: \"primary\" // any of the color prop values of NButton\n\n    },\n    body: {\n      type: String,\n      default: \"Are you sure?\"\n    },\n    isPlugin: {\n      type: Boolean,\n      default: false\n    },\n    size: String,\n    confirmButtonText: {\n      type: String,\n      default: \"OK\"\n    },\n    confirmButtonIcon: String,\n    denyButtonText: {\n      type: String,\n      default: \"Cancel\"\n    },\n    denyButtonIcon: String,\n    autofocus: {\n      type: String,\n      default: \"none\" // 'confirm-button', 'deny-button' or 'none'\n\n    },\n    closeOnConfirm: {\n      type: Boolean,\n      default: true\n    },\n    dismissOn: String,\n    transition: String,\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      data: \"\"\n    };\n  },\n  methods: {\n    open: function open(data) {\n      this.$refs.modal.open();\n\n      if (data) {\n        this.data = data;\n      }\n    },\n    close: function close() {\n      this.$refs.modal.close();\n    },\n    confirm: function confirm() {\n      this.$emit(\"confirm\", this.data);\n\n      if (this.closeOnConfirm) {\n        this.$refs.modal.close();\n      }\n    },\n    deny: function deny() {\n      this.$refs.modal.close();\n      this.$emit(\"deny\");\n    },\n    onModalOpen: function onModalOpen() {\n      var button;\n\n      if (this.autofocus === \"confirm-button\") {\n        button = this.$refs.confirmButton.$el;\n      } else if (this.autofocus === \"deny-button\") {\n        button = this.$refs.denyButton.$el;\n      }\n\n      if (button) {\n        classlist.add(button, \"has-focus-ring\");\n        button.addEventListener(\"blur\", this.removeAutoFocus);\n        button.focus();\n      }\n\n      this.$emit(\"open\");\n    },\n    onModalReveal: function onModalReveal() {\n      this.$emit(\"reveal\");\n    },\n    onModalClose: function onModalClose() {\n      this.$emit(\"close\");\n    },\n    onModalHide: function onModalHide() {\n      this.$emit(\"hide\");\n    },\n    removeAutoFocus: function removeAutoFocus() {\n      var button;\n\n      if (this.autofocus === \"confirm-button\") {\n        button = this.$refs.confirmButton.$el;\n      } else if (this.autofocus === \"deny-button\") {\n        button = this.$refs.denyButton.$el;\n      }\n\n      if (button) {\n        classlist.remove(button, \"has-focus-ring\"); // This listener should run only once\n\n        button.removeEventListener(\"blur\", this.removeAutoFocus);\n      }\n    }\n  }\n};",{"version":3,"sources":["NConfirm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <n-modal\n    ref=\"modal\"\n    class=\"n-confirm\"\n    role=\"alertdialog\"\n    :dismiss-on=\"dismissOn\"\n    :dismissible=\"!loading\"\n    :title=\"title\"\n    :transition=\"transition\"\n    :size=\"size\"\n    @close=\"onModalClose\"\n    @hide=\"onModalHide\"\n    @open=\"onModalOpen\"\n    @reveal=\"onModalReveal\"\n  >\n    <div class=\"n-confirm__message\">\n      <slot :data=\"data\">{{ data }}</slot>\n      <span v-if=\"isPlugin\">{{ body }}</span>\n    </div>\n\n    <div slot=\"footer\" class=\"n-confirm__footer\">\n      <n-button\n        ref=\"denyButton\"\n        :disabled=\"loading\"\n        :icon=\"denyButtonIcon\"\n        button-type=\"text\"\n        variant=\"danger\"\n        @click=\"deny\"\n        >{{ denyButtonText }}</n-button\n      >\n\n      <n-button\n        ref=\"confirmButton\"\n        button-type=\"text\"\n        :icon=\"confirmButtonIcon\"\n        :loading=\"loading\"\n        @click=\"confirm\"\n        >{{ confirmButtonText }}</n-button\n      >\n    </div>\n  </n-modal>\n</template>\n\n<script>\nimport NButton from \"./NButton.vue\";\nimport NModal from \"./NModal.vue\";\n\nimport classlist from \"../helpers/classlist\";\n\nexport default {\n  name: \"NConfirm\",\n\n  components: {\n    NButton,\n    NModal\n  },\n\n  props: {\n    title: {\n      type: String,\n      default: \"NConfirm\"\n    },\n    type: {\n      type: String,\n      default: \"primary\" // any of the color prop values of NButton\n    },\n    body: {\n      type: String,\n      default: \"Are you sure?\"\n    },\n    isPlugin: {\n      type: Boolean,\n      default: false\n    },\n    size: String,\n    confirmButtonText: {\n      type: String,\n      default: \"OK\"\n    },\n\n    confirmButtonIcon: String,\n    denyButtonText: {\n      type: String,\n      default: \"Cancel\"\n    },\n    denyButtonIcon: String,\n    autofocus: {\n      type: String,\n      default: \"none\" // 'confirm-button', 'deny-button' or 'none'\n    },\n    closeOnConfirm: {\n      type: Boolean,\n      default: true\n    },\n    dismissOn: String,\n    transition: String,\n    loading: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      data: \"\"\n    };\n  },\n\n  methods: {\n    open(data) {\n      this.$refs.modal.open();\n      if (data) {\n        this.data = data;\n      }\n    },\n\n    close() {\n      this.$refs.modal.close();\n    },\n\n    confirm() {\n      this.$emit(\"confirm\", this.data);\n\n      if (this.closeOnConfirm) {\n        this.$refs.modal.close();\n      }\n    },\n\n    deny() {\n      this.$refs.modal.close();\n      this.$emit(\"deny\");\n    },\n\n    onModalOpen() {\n      let button;\n\n      if (this.autofocus === \"confirm-button\") {\n        button = this.$refs.confirmButton.$el;\n      } else if (this.autofocus === \"deny-button\") {\n        button = this.$refs.denyButton.$el;\n      }\n\n      if (button) {\n        classlist.add(button, \"has-focus-ring\");\n        button.addEventListener(\"blur\", this.removeAutoFocus);\n        button.focus();\n      }\n\n      this.$emit(\"open\");\n    },\n\n    onModalReveal() {\n      this.$emit(\"reveal\");\n    },\n\n    onModalClose() {\n      this.$emit(\"close\");\n    },\n\n    onModalHide() {\n      this.$emit(\"hide\");\n    },\n\n    removeAutoFocus() {\n      let button;\n\n      if (this.autofocus === \"confirm-button\") {\n        button = this.$refs.confirmButton.$el;\n      } else if (this.autofocus === \"deny-button\") {\n        button = this.$refs.denyButton.$el;\n      }\n\n      if (button) {\n        classlist.remove(button, \"has-focus-ring\");\n\n        // This listener should run only once\n        button.removeEventListener(\"blur\", this.removeAutoFocus);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/sass/imports.scss\";\n\n.n-confirm__message {\n  font-size: rem(15px);\n}\n\n.n-confirm__footer {\n  display: flex;\n}\n</style>\n"],"sourceRoot":"src/components"}]}